{"version":3,"file":"static/js/968.f226a1db.chunk.js","mappings":"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","sources":["Components/FormRegister.jsx","Pages/Register.jsx"],"sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nexport const apiURL = process.env.REACT_APP_API_URL;\n\nfunction FormRegister() {\n    const navigate = useNavigate()\n\n    const [data, setData] =useState({\n        lastname: '',\n        firstname: '',\n        email: '',\n        password: '',\n        style: '',\n        streetnumber: '',\n        street: '',\n        postalcode: '',\n        city: '',\n        country: '',\n        phone: '',        \n    })\n\n    const [countries, setCountries] = useState([]);\n    const [loadingCountries, setLoadingCountries] = useState(true);\n\n    const [value, setValue] = useState(null)\n    //fonction affichage état du recaptcha\n    \n    //fonction submit utilisant le client HTTP Axios, permet le POST des data à l'url de l'api\n    function submit(e){\n        \n\n        e.preventDefault(); //empêche la soumission du formulaire   \n        Axios.post(`${apiURL}/api/customers`,{\n            lastname: data.lastname,\n            firstname: data.firstname,\n            email: data.email,\n            password: data.password,\n            style: data.style,\n            streetnumber: data.streetnumber,\n            street: data.street,\n            postalcode: data.postalcode,\n            city: data.city,\n            country: data.country,\n            phone: data.phone,\n        }, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',                \n            }\n        })\n        .then(res=>{            \n            navigate('/Registered') // redirection vers la page de login après inscription\n        })\n        .catch(err => {\n            if (err.response && err.response.data) {\n                alert(err.response.data.error || 'Une erreur est survenue');\n            } else {\n                alert('Erreur serveur');\n            }\n        });\n        \n    }\n\n    //fonction handle: Récupération des données entrées par l'utilisateur\n    function handle(e){\n        const newdata={...data }\n        newdata[e.target.id] = e.target.value\n        setData(newdata)\n        \n    }\n\n\n\n// Récupère les pays une seule fois au montage\n    useEffect(() => {\n        async function fetchCountries() {\n            try {\n                const res = await fetch('https://restcountries.com/v3.1/all?fields=name,cca2');\n                const result = await res.json();\n\n                const sorted = result\n                .map(c => ({ code: c.cca2, name: c.name.common }))\n                .sort((a, b) => a.name.localeCompare(b.name, 'fr'));\n\n                setCountries(sorted);\n            } catch (err) {\n                console.error(\"Erreur de chargement des pays :\", err);\n            } finally {\n                setLoadingCountries(false);\n            }\n        }\n        fetchCountries();\n    }, []);    \n\n\n    return (\n        <>\n            <div className=\"contacth1\">\n                <h1>S'inscrire </h1>\n            </div>\n            <div >\n                <form onSubmit={(e)=> submit(e)} >\n                    <Form.Group className=\"pb-5\">\n                        <Form.Label className=\"label\" htmlFor=\"lastname\">Nom</Form.Label>\n                        <Form.Control  className=\"field\" onChange={handle} id=\"lastname\" name=\"lastname\" value={data.lastname} type=\"text\" maxLength={30} required></Form.Control>\n\n                        <Form.Label className=\"label\"  htmlFor=\"firstname\">Prénom</Form.Label>\n                        <Form.Control className=\"field\" onChange={handle} id=\"firstname\" name=\"firstname\" value={data.firstname} type=\"text\" maxLength={30} required></Form.Control>\n                        \n                        <Form.Label className=\"label\" htmlFor=\"email\">email</Form.Label>\n                        <Form.Control className=\"field\" onChange={handle} id=\"email\" name=\"email\" value={data.email} type=\"email\" maxLength={30} required></Form.Control>\n\n                        <Form.Label className=\"label\"  htmlFor=\"firstname\">Mot de passe</Form.Label>\n                        <Form.Control className=\"field\" onChange={handle} id=\"password\" name=\"password\" value={data.password} type=\"text\" maxLength={50} required></Form.Control>\n                       \n                        <Form.Label className=\"label\" htmlFor=\"style\">Style de musique préféré</Form.Label>\n                        <Form.Select className=\"field\" onChange={handle} id=\"style\" name=\"style\" value={data.style}  maxLength={20} required>\n                            <option>Choisir...</option>\n                            <option value=\"Électro\">Électro</option>\n                            <option value=\"Pop\">Pop</option>\n                            <option value=\"Rock\">Rock</option>\n                            <option value=\"Hip-hop / Rap\">Hip-hop / Rap</option>\n                            <option value=\"Reggae\">Reggae</option>\n                        </Form.Select>\n\n                        <Form.Label className=\"label\" htmlFor=\"phoneNumber\">Téléphone</Form.Label>\n                        <Form.Control className=\"field\" onChange={handle} id=\"phone\" name=\"phone\" value={data.phone} type=\"text\" maxLength={25} required></Form.Control>\n\n                        <Form.Label className=\"label\" htmlFor=\"streetNumber\">Numéro de rue</Form.Label>\n                        <Form.Control className=\"field\" onChange={handle} id=\"streetnumber\" name=\"streetnumber\" value={data.streetnumber} type=\"text\" maxLength={10} required></Form.Control>\n\n                        <Form.Label className=\"label\" htmlFor=\"street\">Voie</Form.Label>\n                        <Form.Control className=\"field\" onChange={handle} id=\"street\" name=\"street\" value={data.street} type=\"text\" maxLength={50} required></Form.Control>\n\n                        <Form.Label className=\"label\" htmlFor=\"postalCode\">Code postal</Form.Label>\n                        <Form.Control className=\"field\" onChange={handle} id=\"postalcode\" name=\"postalcode\" value={data.postalcode} type=\"text\" maxLength={10} required></Form.Control>\n\n                        <Form.Label className=\"label\" htmlFor=\"city\">Ville</Form.Label>\n                        <Form.Control className=\"field\" onChange={handle} id=\"city\" name=\"city\" value={data.city} type=\"text\" maxLength={10} required></Form.Control>\n\n                        <Form.Label className=\"label\" htmlFor=\"country\">Pays</Form.Label>\n                        <Form.Select className=\"field\" onChange={handle} id=\"country\" name=\"country\" value={data.country}  maxLength={10} required>\n                            <option value=\"\">— Choisissez un pays —</option>\n                            {loadingCountries && <option disabled>Chargement en cours…</option>}\n                            {!loadingCountries &&\n                            countries.map(c => (\n                                <option key={c.code} value={c.name}>\n                                {c.name}\n                                </option>\n                            ))}\n                        </Form.Select>\n\n\n                        <div>\n                            <Form.Check className=\"checkRGPD \" label={\"En cochant cette case, je consens au traitement de mes données personnelles afin de permettre à LiveEvents de me répondre de la manière la plus pertinente et ce, conformément à la politique de confidentialité dont j’ai pris connaissance et que j’accepte sans réserve.\" } id={`checkBox`} required></Form.Check>\n                        </div>\n                        \n                        <Link to=\"/Confidential\" >\n                            <Button className=\"checkRGPDLink\" variant=\"link\" >Lire la politique de confidentialité</Button>\n                        </Link>\n                        \n\n                        \n                        \n                \n                        <ReCAPTCHA\n                            sitekey=\"6LfQ-NwqAAAAAPQ7zlhsVFa-88bdAJT7v0QwOWsy\"\n                            onChange={setValue}                            \n                        /> \n                        \n\n                        <div className=\"submitbutton \">\n                            <Button variant=\"secondary\" size=\"lg\" className=\"boutonSubmit \" type='submit' disabled={!value} >\n                                S'inscrire\n                            </Button>\n                        </div> \n                        \n                        \n                       \n                    </Form.Group>\n                </form>\n            </div>\n            </>\n    )\n    \n}\nexport default FormRegister;","import React from 'react';\nimport FormRegister from \"../Components/FormRegister\"\n\n\n\nfunction Contact() {\n  \n  return (\n    <div className=\"contact\">\n      <FormRegister />\n    </div>\n  );\n}\nexport default Contact;"],"names":["navigate","useNavigate","data","setData","useState","lastname","firstname","email","password","style","streetnumber","street","postalcode","city","country","phone","countries","setCountries","loadingCountries","setLoadingCountries","value","setValue","handle","e","newdata","_objectSpread","target","id","useEffect","async","res","fetch","sorted","json","map","c","code","cca2","name","common","sort","a","b","localeCompare","err","console","error","fetchCountries","_jsxs","_Fragment","children","_jsx","className","onSubmit","preventDefault","Axios","post","concat","process","headers","then","catch","response","alert","submit","Form","Group","Label","htmlFor","Control","onChange","type","maxLength","required","Select","disabled","Check","label","Link","to","Button","variant","ReCAPTCHA","sitekey","size","FormRegister"],"sourceRoot":""}