{"version":3,"file":"static/js/881.5a306687.chunk.js","mappings":"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","sources":["../node_modules/fast-deep-equal/index.js","../node_modules/@vis.gl/react-google-maps/src/libraries/api-loading-status.ts","../node_modules/@vis.gl/react-google-maps/src/libraries/google-maps-api-loader.ts","../node_modules/@vis.gl/react-google-maps/src/components/api-provider.tsx","../node_modules/@vis.gl/react-google-maps/src/components/map/use-map-events.ts","../node_modules/@vis.gl/react-google-maps/src/libraries/use-deep-compare-effect.tsx","../node_modules/@vis.gl/react-google-maps/src/components/map/use-map-options.ts","../node_modules/@vis.gl/react-google-maps/src/hooks/use-api-loading-status.ts","../node_modules/@vis.gl/react-google-maps/src/libraries/lat-lng-utils.ts","../node_modules/@vis.gl/react-google-maps/src/components/map/auth-failure-message.tsx","../node_modules/@vis.gl/react-google-maps/src/hooks/use-api-is-loaded.ts","../node_modules/@vis.gl/react-google-maps/src/components/map/use-tracked-camera-state-ref.ts","../node_modules/@vis.gl/react-google-maps/src/libraries/use-force-update.ts","../node_modules/@vis.gl/react-google-maps/src/components/map/use-map-instance.ts","../node_modules/@vis.gl/react-google-maps/src/libraries/use-callback-ref.tsx","../node_modules/@vis.gl/react-google-maps/src/components/map/index.tsx","../node_modules/@vis.gl/react-google-maps/src/components/map/use-map-camera-params.ts","../node_modules/@vis.gl/react-google-maps/src/components/map/use-deckgl-camera-update.ts","../node_modules/@vis.gl/react-google-maps/src/libraries/errors.ts","../node_modules/@vis.gl/react-google-maps/src/hooks/use-map.ts","../node_modules/@vis.gl/react-google-maps/src/hooks/use-maps-library.ts","../node_modules/@vis.gl/react-google-maps/src/hooks/use-maps-event-listener.ts","../node_modules/@vis.gl/react-google-maps/src/hooks/use-prop-binding.ts","../node_modules/@vis.gl/react-google-maps/src/hooks/use-dom-event-listener.ts","../node_modules/@vis.gl/react-google-maps/src/components/advanced-marker.tsx","../node_modules/@vis.gl/react-google-maps/src/libraries/set-value-for-styles.ts","../node_modules/@vis.gl/react-google-maps/src/components/info-window.tsx","../node_modules/@vis.gl/react-google-maps/src/components/static-map.tsx","../node_modules/@vis.gl/react-google-maps/src/components/marker.tsx","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export const APILoadingStatus = {\n  NOT_LOADED: 'NOT_LOADED',\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  FAILED: 'FAILED',\n  AUTH_FAILURE: 'AUTH_FAILURE'\n};\nexport type APILoadingStatus =\n  (typeof APILoadingStatus)[keyof typeof APILoadingStatus];\n","import {APILoadingStatus} from './api-loading-status';\n\nexport type ApiParams = {\n  key: string;\n  v?: string;\n  language?: string;\n  region?: string;\n  libraries?: string;\n  channel?: number;\n  solutionChannel?: string;\n  authReferrerPolicy?: string;\n};\n\ntype LoadingStatusCallback = (status: APILoadingStatus) => void;\n\nconst MAPS_API_BASE_URL = 'https://maps.googleapis.com/maps/api/js';\n\n/**\n * A GoogleMapsApiLoader to reliably load and unload the Google Maps JavaScript API.\n *\n * The actual loading and unloading is delayed into the microtask queue, to\n * allow using the API in an useEffect hook, without worrying about multiple API loads.\n */\nexport class GoogleMapsApiLoader {\n  /**\n   * The current loadingStatus of the API.\n   */\n  public static loadingStatus: APILoadingStatus = APILoadingStatus.NOT_LOADED;\n\n  /**\n   * The parameters used for first loading the API.\n   */\n  public static serializedApiParams?: string;\n\n  /**\n   * A list of functions to be notified when the loading status changes.\n   */\n  private static listeners: LoadingStatusCallback[] = [];\n\n  /**\n   * Loads the Maps JavaScript API with the specified parameters.\n   * Since the Maps library can only be loaded once per page, this will\n   * produce a warning when called multiple times with different\n   * parameters.\n   *\n   * The returned promise resolves when loading completes\n   * and rejects in case of an error or when the loading was aborted.\n   */\n  static async load(\n    params: ApiParams,\n    onLoadingStatusChange: (status: APILoadingStatus) => void\n  ): Promise<void> {\n    const libraries = params.libraries ? params.libraries.split(',') : [];\n    const serializedParams = this.serializeParams(params);\n\n    this.listeners.push(onLoadingStatusChange);\n\n    // Note: if `google.maps.importLibrary` has been defined externally, we\n    //   assume that loading is complete and successful.\n    //   If it was defined by a previous call to this method, a warning\n    //   message is logged if there are differences in api-parameters used\n    //   for both calls.\n\n    if (window.google?.maps?.importLibrary as unknown) {\n      // no serialized parameters means it was loaded externally\n      if (!this.serializedApiParams) {\n        this.loadingStatus = APILoadingStatus.LOADED;\n      }\n      this.notifyLoadingStatusListeners();\n    } else {\n      this.serializedApiParams = serializedParams;\n      this.initImportLibrary(params);\n    }\n\n    if (\n      this.serializedApiParams &&\n      this.serializedApiParams !== serializedParams\n    ) {\n      console.warn(\n        `[google-maps-api-loader] The maps API has already been loaded ` +\n          `with different parameters and will not be loaded again. Refresh the ` +\n          `page for new values to have effect.`\n      );\n    }\n\n    const librariesToLoad = ['maps', ...libraries];\n    await Promise.all(\n      librariesToLoad.map(name => google.maps.importLibrary(name))\n    );\n  }\n\n  /**\n   * Serialize the parameters used to load the library for easier comparison.\n   */\n  private static serializeParams(params: ApiParams): string {\n    return [\n      params.v,\n      params.key,\n      params.language,\n      params.region,\n      params.authReferrerPolicy,\n      params.solutionChannel\n    ].join('/');\n  }\n\n  /**\n   * Creates the global `google.maps.importLibrary` function for bootstrapping.\n   * This is essentially a formatted version of the dynamic loading script\n   * from the official documentation with some minor adjustments.\n   *\n   * The created importLibrary function will load the Google Maps JavaScript API,\n   * which will then replace the `google.maps.importLibrary` function with the full\n   * implementation.\n   *\n   * @see https://developers.google.com/maps/documentation/javascript/load-maps-js-api#dynamic-library-import\n   */\n  private static initImportLibrary(params: ApiParams) {\n    if (!window.google) window.google = {} as never;\n    if (!window.google.maps) window.google.maps = {} as never;\n\n    if (window.google.maps['importLibrary']) {\n      console.error(\n        '[google-maps-api-loader-internal]: initImportLibrary must only be called once'\n      );\n\n      return;\n    }\n\n    let apiPromise: Promise<void> | null = null;\n\n    const loadApi = () => {\n      if (apiPromise) return apiPromise;\n\n      apiPromise = new Promise((resolve, reject) => {\n        const scriptElement = document.createElement('script');\n        const urlParams = new URLSearchParams();\n\n        for (const [key, value] of Object.entries(params)) {\n          const urlParamName = key.replace(\n            /[A-Z]/g,\n            t => '_' + t[0].toLowerCase()\n          );\n          urlParams.set(urlParamName, String(value));\n        }\n        urlParams.set('loading', 'async');\n        urlParams.set('callback', '__googleMapsCallback__');\n\n        scriptElement.async = true;\n        scriptElement.src = MAPS_API_BASE_URL + `?` + urlParams.toString();\n        scriptElement.nonce =\n          (document.querySelector('script[nonce]') as HTMLScriptElement)\n            ?.nonce || '';\n\n        scriptElement.onerror = () => {\n          this.loadingStatus = APILoadingStatus.FAILED;\n          this.notifyLoadingStatusListeners();\n          reject(new Error('The Google Maps JavaScript API could not load.'));\n        };\n\n        window.__googleMapsCallback__ = () => {\n          this.loadingStatus = APILoadingStatus.LOADED;\n          this.notifyLoadingStatusListeners();\n          resolve();\n        };\n\n        window.gm_authFailure = () => {\n          this.loadingStatus = APILoadingStatus.AUTH_FAILURE;\n          this.notifyLoadingStatusListeners();\n        };\n\n        this.loadingStatus = APILoadingStatus.LOADING;\n        this.notifyLoadingStatusListeners();\n\n        document.head.append(scriptElement);\n      });\n\n      return apiPromise;\n    };\n\n    // for the first load, we declare an importLibrary function that will\n    // be overwritten once the api is loaded.\n    google.maps.importLibrary = libraryName =>\n      loadApi().then(() => google.maps.importLibrary(libraryName));\n  }\n\n  /**\n   * Calls all registered loadingStatusListeners after a status update.\n   */\n  private static notifyLoadingStatusListeners() {\n    for (const fn of this.listeners) {\n      fn(this.loadingStatus);\n    }\n  }\n}\n\n// Declare global maps callback functions\ndeclare global {\n  interface Window {\n    __googleMapsCallback__?: () => void;\n    gm_authFailure?: () => void;\n  }\n}\n","import React, {\n  FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState\n} from 'react';\n\nimport {\n  ApiParams,\n  GoogleMapsApiLoader\n} from '../libraries/google-maps-api-loader';\nimport {APILoadingStatus} from '../libraries/api-loading-status';\n\ntype ImportLibraryFunction = typeof google.maps.importLibrary;\ntype GoogleMapsLibrary = Awaited<ReturnType<ImportLibraryFunction>>;\ntype LoadedLibraries = {[name: string]: GoogleMapsLibrary};\n\nexport interface APIProviderContextValue {\n  status: APILoadingStatus;\n  loadedLibraries: LoadedLibraries;\n  importLibrary: typeof google.maps.importLibrary;\n  mapInstances: Record<string, google.maps.Map>;\n  addMapInstance: (map: google.maps.Map, id?: string) => void;\n  removeMapInstance: (id?: string) => void;\n  clearMapInstances: () => void;\n}\n\nconst DEFAULT_SOLUTION_CHANNEL = 'GMP_visgl_rgmlibrary_v1_default';\n\nexport const APIProviderContext =\n  React.createContext<APIProviderContextValue | null>(null);\n\nexport type APIProviderProps = PropsWithChildren<{\n  /**\n   * apiKey must be provided to load the Google Maps JavaScript API. To create an API key, see: https://developers.google.com/maps/documentation/javascript/get-api-key\n   * Part of:\n   */\n  apiKey: string;\n  /**\n   * A custom id to reference the script tag can be provided. The default is set to 'google-maps-api'\n   * @default 'google-maps-api'\n   */\n  libraries?: Array<string>;\n  /**\n   * A specific version of the Google Maps JavaScript API can be used.\n   * Read more about versioning: https://developers.google.com/maps/documentation/javascript/versions\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  version?: string;\n  /**\n   * Sets the map to a specific region.\n   * Read more about localizing the Map: https://developers.google.com/maps/documentation/javascript/localization\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  region?: string;\n  /**\n   * Use a specific language for the map.\n   * Read more about localizing the Map: https://developers.google.com/maps/documentation/javascript/localization\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  language?: string;\n  /**\n   * auth_referrer_policy can be set to 'origin'.\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  authReferrerPolicy?: string;\n  /**\n   * To understand usage and ways to improve our solutions, Google includes the\n   * `solution_channel` query parameter in API calls to gather information about\n   * code usage. You may opt out at any time by setting this attribute to an\n   * empty string. Read more in the\n   * [documentation](https://developers.google.com/maps/reporting-and-monitoring/reporting#solutions-usage).\n   */\n  channel?: number;\n  /**\n   * To track usage of Google Maps JavaScript API via numeric channels. The only acceptable channel values are numbers from 0-999.\n   * Read more in the\n   * [documentation](https://developers.google.com/maps/reporting-and-monitoring/reporting#usage-tracking-per-channel)\n   */\n  solutionChannel?: string;\n  /**\n   * A function that can be used to execute code after the Google Maps JavaScript API has been loaded.\n   */\n  onLoad?: () => void;\n  /**\n   * A function that will be called if there was an error when loading the Google Maps JavaScript API.\n   */\n  onError?: (error: unknown) => void;\n}>;\n\n/**\n * local hook to set up the map-instance management context.\n */\nfunction useMapInstances() {\n  const [mapInstances, setMapInstances] = useState<\n    Record<string, google.maps.Map>\n  >({});\n\n  const addMapInstance = (mapInstance: google.maps.Map, id = 'default') => {\n    setMapInstances(instances => ({...instances, [id]: mapInstance}));\n  };\n\n  const removeMapInstance = (id = 'default') => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setMapInstances(({[id]: _, ...remaining}) => remaining);\n  };\n\n  const clearMapInstances = () => {\n    setMapInstances({});\n  };\n\n  return {mapInstances, addMapInstance, removeMapInstance, clearMapInstances};\n}\n\n/**\n * local hook to handle the loading of the maps API, returns the current loading status\n * @param props\n */\nfunction useGoogleMapsApiLoader(props: APIProviderProps) {\n  const {\n    onLoad,\n    onError,\n    apiKey,\n    version,\n    libraries = [],\n    ...otherApiParams\n  } = props;\n\n  const [status, setStatus] = useState<APILoadingStatus>(\n    GoogleMapsApiLoader.loadingStatus\n  );\n  const [loadedLibraries, addLoadedLibrary] = useReducer(\n    (\n      loadedLibraries: LoadedLibraries,\n      action: {name: keyof LoadedLibraries; value: LoadedLibraries[string]}\n    ) => {\n      return loadedLibraries[action.name]\n        ? loadedLibraries\n        : {...loadedLibraries, [action.name]: action.value};\n    },\n    {}\n  );\n\n  const librariesString = useMemo(() => libraries?.join(','), [libraries]);\n  const serializedParams = useMemo(\n    () => JSON.stringify({apiKey, version, ...otherApiParams}),\n    [apiKey, version, otherApiParams]\n  );\n\n  const importLibrary: typeof google.maps.importLibrary = useCallback(\n    async (name: string) => {\n      if (loadedLibraries[name]) {\n        return loadedLibraries[name];\n      }\n\n      if (!google?.maps?.importLibrary) {\n        throw new Error(\n          '[api-provider-internal] importLibrary was called before ' +\n            'google.maps.importLibrary was defined.'\n        );\n      }\n\n      const res = await window.google.maps.importLibrary(name);\n      addLoadedLibrary({name, value: res});\n\n      return res;\n    },\n    [loadedLibraries]\n  );\n\n  useEffect(\n    () => {\n      (async () => {\n        try {\n          const params: ApiParams = {key: apiKey, ...otherApiParams};\n          if (version) params.v = version;\n          if (librariesString?.length > 0) params.libraries = librariesString;\n\n          if (\n            params.channel === undefined ||\n            params.channel < 0 ||\n            params.channel > 999\n          )\n            delete params.channel;\n\n          if (params.solutionChannel === undefined)\n            params.solutionChannel = DEFAULT_SOLUTION_CHANNEL;\n          else if (params.solutionChannel === '') delete params.solutionChannel;\n\n          await GoogleMapsApiLoader.load(params, status => setStatus(status));\n\n          for (const name of ['core', 'maps', ...libraries]) {\n            await importLibrary(name);\n          }\n\n          if (onLoad) {\n            onLoad();\n          }\n        } catch (error) {\n          if (onError) {\n            onError(error);\n          } else {\n            console.error(\n              '<ApiProvider> failed to load the Google Maps JavaScript API',\n              error\n            );\n          }\n        }\n      })();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [apiKey, librariesString, serializedParams]\n  );\n\n  return {\n    status,\n    loadedLibraries,\n    importLibrary\n  };\n}\n\n/**\n * Component to wrap the components from this library and load the Google Maps JavaScript API\n */\nexport const APIProvider: FunctionComponent<APIProviderProps> = props => {\n  const {children, ...loaderProps} = props;\n  const {mapInstances, addMapInstance, removeMapInstance, clearMapInstances} =\n    useMapInstances();\n\n  const {status, loadedLibraries, importLibrary} =\n    useGoogleMapsApiLoader(loaderProps);\n\n  const contextValue: APIProviderContextValue = useMemo(\n    () => ({\n      mapInstances,\n      addMapInstance,\n      removeMapInstance,\n      clearMapInstances,\n      status,\n      loadedLibraries,\n      importLibrary\n    }),\n    [\n      mapInstances,\n      addMapInstance,\n      removeMapInstance,\n      clearMapInstances,\n      status,\n      loadedLibraries,\n      importLibrary\n    ]\n  );\n\n  return (\n    <APIProviderContext.Provider value={contextValue}>\n      {children}\n    </APIProviderContext.Provider>\n  );\n};\n","import {useEffect} from 'react';\n\n/**\n * Handlers for all events that could be emitted by map-instances.\n */\nexport type MapEventProps = Partial<{\n  // map view state events\n  onBoundsChanged: (event: MapCameraChangedEvent) => void;\n  onCenterChanged: (event: MapCameraChangedEvent) => void;\n  onHeadingChanged: (event: MapCameraChangedEvent) => void;\n  onTiltChanged: (event: MapCameraChangedEvent) => void;\n  onZoomChanged: (event: MapCameraChangedEvent) => void;\n  onCameraChanged: (event: MapCameraChangedEvent) => void;\n\n  // mouse / touch / pointer events\n  onClick: (event: MapMouseEvent) => void;\n  onDblclick: (event: MapMouseEvent) => void;\n  onContextmenu: (event: MapMouseEvent) => void;\n  onMousemove: (event: MapMouseEvent) => void;\n  onMouseover: (event: MapMouseEvent) => void;\n  onMouseout: (event: MapMouseEvent) => void;\n  onDrag: (event: MapEvent) => void;\n  onDragend: (event: MapEvent) => void;\n  onDragstart: (event: MapEvent) => void;\n\n  // loading events\n  onTilesLoaded: (event: MapEvent) => void;\n  onIdle: (event: MapEvent) => void;\n\n  // configuration events\n  onProjectionChanged: (event: MapEvent) => void;\n  onIsFractionalZoomEnabledChanged: (event: MapEvent) => void;\n  onMapCapabilitiesChanged: (event: MapEvent) => void;\n  onMapTypeIdChanged: (event: MapEvent) => void;\n  onRenderingTypeChanged: (event: MapEvent) => void;\n}>;\n\n/**\n * Sets up effects to bind event-handlers for all event-props in MapEventProps.\n * @internal\n */\nexport function useMapEvents(\n  map: google.maps.Map | null,\n  props: MapEventProps\n) {\n  // note: calling a useEffect hook from within a loop is prohibited by the\n  // rules of hooks, but it's ok here since it's unconditional and the number\n  // and order of iterations is always strictly the same.\n  // (see https://legacy.reactjs.org/docs/hooks-rules.html)\n\n  for (const propName of eventPropNames) {\n    // fixme: this cast is essentially a 'trust me, bro' for typescript, but\n    //   a proper solution seems way too complicated right now\n    const handler = props[propName] as (ev: MapEvent) => void;\n    const eventType = propNameToEventType[propName];\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!map) return;\n      if (!handler) return;\n\n      const listener = google.maps.event.addListener(\n        map,\n        eventType,\n        (ev?: google.maps.MapMouseEvent | google.maps.IconMouseEvent) => {\n          handler(createMapEvent(eventType, map, ev));\n        }\n      );\n\n      return () => listener.remove();\n    }, [map, eventType, handler]);\n  }\n}\n\n/**\n * Create the wrapped map-events used for the event-props.\n * @param type the event type as it is specified to the maps api\n * @param map the map instance the event originates from\n * @param srcEvent the source-event if there is one.\n */\nfunction createMapEvent(\n  type: string,\n  map: google.maps.Map,\n  srcEvent?: google.maps.MapMouseEvent | google.maps.IconMouseEvent\n): MapEvent {\n  const ev: MapEvent = {\n    type,\n    map,\n    detail: {},\n    stoppable: false,\n    stop: () => {}\n  };\n\n  if (cameraEventTypes.includes(type)) {\n    const camEvent = ev as MapCameraChangedEvent;\n\n    const center = map.getCenter();\n    const zoom = map.getZoom();\n    const heading = map.getHeading() || 0;\n    const tilt = map.getTilt() || 0;\n    const bounds = map.getBounds();\n\n    if (!center || !bounds || !Number.isFinite(zoom)) {\n      console.warn(\n        '[createEvent] at least one of the values from the map ' +\n          'returned undefined. This is not expected to happen. Please ' +\n          'report an issue at https://github.com/visgl/react-google-maps/issues/new'\n      );\n    }\n\n    camEvent.detail = {\n      center: center?.toJSON() || {lat: 0, lng: 0},\n      zoom: (zoom as number) || 0,\n      heading: heading as number,\n      tilt: tilt as number,\n      bounds: bounds?.toJSON() || {\n        north: 90,\n        east: 180,\n        south: -90,\n        west: -180\n      }\n    };\n\n    return camEvent;\n  } else if (mouseEventTypes.includes(type)) {\n    if (!srcEvent)\n      throw new Error('[createEvent] mouse events must provide a srcEvent');\n    const mouseEvent = ev as MapMouseEvent;\n\n    mouseEvent.domEvent = srcEvent.domEvent;\n    mouseEvent.stoppable = true;\n    mouseEvent.stop = () => srcEvent.stop();\n\n    mouseEvent.detail = {\n      latLng: srcEvent.latLng?.toJSON() || null,\n      placeId: (srcEvent as google.maps.IconMouseEvent).placeId\n    };\n\n    return mouseEvent;\n  }\n\n  return ev;\n}\n\n/**\n * maps the camelCased names of event-props to the corresponding event-types\n * used in the maps API.\n */\nconst propNameToEventType: {[prop in keyof Required<MapEventProps>]: string} = {\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onContextmenu: 'contextmenu',\n  onDblclick: 'dblclick',\n  onDrag: 'drag',\n  onDragend: 'dragend',\n  onDragstart: 'dragstart',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onIsFractionalZoomEnabledChanged: 'isfractionalzoomenabled_changed',\n  onMapCapabilitiesChanged: 'mapcapabilities_changed',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMousemove: 'mousemove',\n  onMouseout: 'mouseout',\n  onMouseover: 'mouseover',\n  onProjectionChanged: 'projection_changed',\n  onRenderingTypeChanged: 'renderingtype_changed',\n  onTilesLoaded: 'tilesloaded',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed',\n\n  // note: onCameraChanged is an alias for the bounds_changed event,\n  // since that is going to be fired in every situation where the camera is\n  // updated.\n  onCameraChanged: 'bounds_changed'\n} as const;\n\nconst cameraEventTypes = [\n  'bounds_changed',\n  'center_changed',\n  'heading_changed',\n  'tilt_changed',\n  'zoom_changed'\n];\n\nconst mouseEventTypes = [\n  'click',\n  'contextmenu',\n  'dblclick',\n  'mousemove',\n  'mouseout',\n  'mouseover'\n];\n\ntype MapEventPropName = keyof MapEventProps;\nconst eventPropNames = Object.keys(propNameToEventType) as MapEventPropName[];\n\nexport type MapEvent<T = unknown> = {\n  type: string;\n  map: google.maps.Map;\n  detail: T;\n\n  stoppable: boolean;\n  stop: () => void;\n  domEvent?: MouseEvent | TouchEvent | PointerEvent | KeyboardEvent | Event;\n};\n\nexport type MapMouseEvent = MapEvent<{\n  latLng: google.maps.LatLngLiteral | null;\n  placeId: string | null;\n}>;\n\nexport type MapCameraChangedEvent = MapEvent<{\n  center: google.maps.LatLngLiteral;\n  bounds: google.maps.LatLngBoundsLiteral;\n  zoom: number;\n  heading: number;\n  tilt: number;\n}>;\n","import {DependencyList, EffectCallback, useEffect, useRef} from 'react';\nimport isDeepEqual from 'fast-deep-equal';\n\nexport function useDeepCompareEffect(\n  effect: EffectCallback,\n  deps: DependencyList\n) {\n  const ref = useRef<DependencyList | undefined>(undefined);\n\n  if (!ref.current || !isDeepEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, ref.current);\n}\n","import {MapProps} from '../map';\nimport {useDeepCompareEffect} from '../../libraries/use-deep-compare-effect';\n\nconst mapOptionKeys: Set<keyof google.maps.MapOptions> = new Set([\n  'backgroundColor',\n  'clickableIcons',\n  'controlSize',\n  'disableDefaultUI',\n  'disableDoubleClickZoom',\n  'draggable',\n  'draggableCursor',\n  'draggingCursor',\n  'fullscreenControl',\n  'fullscreenControlOptions',\n  'gestureHandling',\n  'headingInteractionEnabled',\n  'isFractionalZoomEnabled',\n  'keyboardShortcuts',\n  'mapTypeControl',\n  'mapTypeControlOptions',\n  'mapTypeId',\n  'maxZoom',\n  'minZoom',\n  'noClear',\n  'panControl',\n  'panControlOptions',\n  'restriction',\n  'rotateControl',\n  'rotateControlOptions',\n  'scaleControl',\n  'scaleControlOptions',\n  'scrollwheel',\n  'streetView',\n  'streetViewControl',\n  'streetViewControlOptions',\n  'styles',\n  'tiltInteractionEnabled',\n  'zoomControl',\n  'zoomControlOptions'\n]);\n\n/**\n * Internal hook to update the map-options when props are changed.\n *\n * @param map the map instance\n * @param mapProps the props to update the map-instance with\n * @internal\n */\nexport function useMapOptions(map: google.maps.Map | null, mapProps: MapProps) {\n  /* eslint-disable react-hooks/exhaustive-deps --\n   *\n   * The following effects aren't triggered when the map is changed.\n   * In that case, the values will be or have been passed to the map\n   * constructor via mapOptions.\n   */\n\n  const mapOptions: google.maps.MapOptions = {};\n  const keys = Object.keys(mapProps) as (keyof google.maps.MapOptions)[];\n  for (const key of keys) {\n    if (!mapOptionKeys.has(key)) continue;\n\n    mapOptions[key] = mapProps[key] as never;\n  }\n\n  // update the map options when mapOptions is changed\n  // Note: due to the destructuring above, mapOptions will be seen as changed\n  //   with every re-render, so we're assuming the maps-api will properly\n  //   deal with unchanged option-values passed into setOptions.\n  useDeepCompareEffect(() => {\n    if (!map) return;\n\n    map.setOptions(mapOptions);\n  }, [mapOptions]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}\n","import {useContext} from 'react';\nimport {APIProviderContext} from '../components/api-provider';\nimport {APILoadingStatus} from '../libraries/api-loading-status';\n\nexport function useApiLoadingStatus(): APILoadingStatus {\n  return useContext(APIProviderContext)?.status || APILoadingStatus.NOT_LOADED;\n}\n","export function isLatLngLiteral(\n  obj: unknown\n): obj is google.maps.LatLngLiteral {\n  if (!obj || typeof obj !== 'object') return false;\n  if (!('lat' in obj && 'lng' in obj)) return false;\n\n  return Number.isFinite(obj.lat) && Number.isFinite(obj.lng);\n}\n\nexport function latLngEquals(\n  a: google.maps.LatLngLiteral | google.maps.LatLng | undefined | null,\n  b: google.maps.LatLngLiteral | google.maps.LatLng | undefined | null\n): boolean {\n  if (!a || !b) return false;\n  const A = toLatLngLiteral(a);\n  const B = toLatLngLiteral(b);\n  if (A.lat !== B.lat || A.lng !== B.lng) return false;\n  return true;\n}\n\nexport function toLatLngLiteral(\n  obj: google.maps.LatLngLiteral | google.maps.LatLng\n): google.maps.LatLngLiteral {\n  if (isLatLngLiteral(obj)) return obj;\n\n  return obj.toJSON();\n}\n","import React, {CSSProperties, FunctionComponent} from 'react';\n\nexport const AuthFailureMessage: FunctionComponent = () => {\n  const style: CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontSize: '.8rem',\n    color: 'rgba(0,0,0,0.6)',\n    background: '#dddddd',\n    padding: '1rem 1.5rem'\n  };\n\n  return (\n    <div style={style}>\n      <h2>Error: AuthFailure</h2>\n      <p>\n        A problem with your API key prevents the map from rendering correctly.\n        Please make sure the value of the <code>APIProvider.apiKey</code> prop\n        is correct. Check the error-message in the console for further details.\n      </p>\n    </div>\n  );\n};\n","import {useApiLoadingStatus} from './use-api-loading-status';\nimport {APILoadingStatus} from '../libraries/api-loading-status';\n/**\n * Hook to check if the Maps JavaScript API is loaded\n */\nexport function useApiIsLoaded(): boolean {\n  const status = useApiLoadingStatus();\n\n  return status === APILoadingStatus.LOADED;\n}\n","import {MutableRefObject, useEffect, useRef} from 'react';\nimport {useForceUpdate} from '../../libraries/use-force-update';\n\nexport type CameraState = {\n  center: google.maps.LatLngLiteral;\n  heading: number;\n  tilt: number;\n  zoom: number;\n};\n\nexport type CameraStateRef = MutableRefObject<CameraState>;\n\nfunction handleBoundsChange(map: google.maps.Map, ref: CameraStateRef) {\n  const center = map.getCenter();\n  const zoom = map.getZoom();\n  const heading = map.getHeading() || 0;\n  const tilt = map.getTilt() || 0;\n  const bounds = map.getBounds();\n\n  if (!center || !bounds || !Number.isFinite(zoom)) {\n    console.warn(\n      '[useTrackedCameraState] at least one of the values from the map ' +\n        'returned undefined. This is not expected to happen. Please ' +\n        'report an issue at https://github.com/visgl/react-google-maps/issues/new'\n    );\n  }\n\n  // fixme: do we need the `undefined` cases for the camera-params? When are they used in the maps API?\n  Object.assign(ref.current, {\n    center: center?.toJSON() || {lat: 0, lng: 0},\n    zoom: (zoom as number) || 0,\n    heading: heading as number,\n    tilt: tilt as number\n  });\n}\n\n/**\n * Creates a mutable ref object to track the last known state of the map camera.\n * This is used in `useMapCameraParams` to reduce stuttering in normal operation\n * by avoiding updates of the map camera with values that have already been processed.\n */\nexport function useTrackedCameraStateRef(\n  map: google.maps.Map | null\n): CameraStateRef {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef<CameraState>({\n    center: {lat: 0, lng: 0},\n    heading: 0,\n    tilt: 0,\n    zoom: 0\n  });\n\n  // Record camera state with every bounds_changed event dispatched by the map.\n  // This data is used to prevent feeding these values back to the\n  // map-instance when a typical \"controlled component\" setup (state variable is\n  // fed into and updated by the map).\n  useEffect(() => {\n    if (!map) return;\n\n    const listener = google.maps.event.addListener(\n      map,\n      'bounds_changed',\n      () => {\n        handleBoundsChange(map, ref);\n\n        // When an event is occured, we have to update during the next cycle.\n        // The application could decide to ignore the event and not update any\n        // camera props of the map, meaning that in that case we will have to\n        // 'undo' the change to the camera.\n        forceUpdate();\n      }\n    );\n\n    return () => listener.remove();\n  }, [map, forceUpdate]);\n\n  return ref;\n}\n","import {useReducer} from 'react';\n\nexport function useForceUpdate(): () => void {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n  return forceUpdate;\n}\n","import {Ref, useEffect, useRef, useState} from 'react';\n\nimport {MapProps} from '../map';\nimport {APIProviderContextValue} from '../api-provider';\n\nimport {useCallbackRef} from '../../libraries/use-callback-ref';\nimport {useApiIsLoaded} from '../../hooks/use-api-is-loaded';\nimport {\n  CameraState,\n  CameraStateRef,\n  useTrackedCameraStateRef\n} from './use-tracked-camera-state-ref';\n\n/**\n * Stores a stack of map-instances for each mapId. Whenever an\n * instance is used, it is removed from the stack while in use,\n * and returned to the stack when the component unmounts.\n * This allows us to correctly implement caching for multiple\n * maps om the same page, while reusing as much as possible.\n *\n * FIXME: while it should in theory be possible to reuse maps solely\n *   based on the mapId (as all other parameters can be changed at\n *   runtime), we don't yet have good enough tracking of options to\n *   reliably unset all the options that have been set.\n */\nclass CachedMapStack {\n  static entries: {[key: string]: google.maps.Map[]} = {};\n\n  static has(key: string) {\n    return this.entries[key] && this.entries[key].length > 0;\n  }\n\n  static pop(key: string) {\n    if (!this.entries[key]) return null;\n\n    return this.entries[key].pop() || null;\n  }\n\n  static push(key: string, value: google.maps.Map) {\n    if (!this.entries[key]) this.entries[key] = [];\n\n    this.entries[key].push(value);\n  }\n}\n\n/**\n * The main hook takes care of creating map-instances and registering them in\n * the api-provider context.\n * @return a tuple of the map-instance created (or null) and the callback\n *   ref that will be used to pass the map-container into this hook.\n * @internal\n */\nexport function useMapInstance(\n  props: MapProps,\n  context: APIProviderContextValue\n): readonly [\n  map: google.maps.Map | null,\n  containerRef: Ref<HTMLDivElement>,\n  cameraStateRef: CameraStateRef\n] {\n  const apiIsLoaded = useApiIsLoaded();\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [container, containerRef] = useCallbackRef<HTMLDivElement>();\n\n  const cameraStateRef = useTrackedCameraStateRef(map);\n\n  const {\n    id,\n    defaultBounds,\n    defaultCenter,\n    defaultZoom,\n    defaultHeading,\n    defaultTilt,\n    reuseMaps,\n    renderingType,\n    colorScheme,\n\n    ...mapOptions\n  } = props;\n\n  const hasZoom = props.zoom !== undefined || props.defaultZoom !== undefined;\n  const hasCenter =\n    props.center !== undefined || props.defaultCenter !== undefined;\n\n  if (!defaultBounds && (!hasZoom || !hasCenter)) {\n    console.warn(\n      '<Map> component is missing configuration. ' +\n        'You have to provide zoom and center (via the `zoom`/`defaultZoom` and ' +\n        '`center`/`defaultCenter` props) or specify the region to show using ' +\n        '`defaultBounds`. See ' +\n        'https://visgl.github.io/react-google-maps/docs/api-reference/components/map#required'\n    );\n  }\n\n  // apply default camera props if available and not overwritten by controlled props\n  if (!mapOptions.center && defaultCenter) mapOptions.center = defaultCenter;\n  if (!mapOptions.zoom && Number.isFinite(defaultZoom))\n    mapOptions.zoom = defaultZoom;\n  if (!mapOptions.heading && Number.isFinite(defaultHeading))\n    mapOptions.heading = defaultHeading;\n  if (!mapOptions.tilt && Number.isFinite(defaultTilt))\n    mapOptions.tilt = defaultTilt;\n\n  for (const key of Object.keys(mapOptions) as (keyof typeof mapOptions)[])\n    if (mapOptions[key] === undefined) delete mapOptions[key];\n\n  const savedMapStateRef = useRef<{\n    mapId?: string | null;\n    cameraState: CameraState;\n  }>(undefined);\n\n  // create the map instance and register it in the context\n  useEffect(\n    () => {\n      if (!container || !apiIsLoaded) return;\n\n      const {addMapInstance, removeMapInstance} = context;\n\n      // note: colorScheme (upcoming feature) isn't yet in the typings, remove once that is fixed:\n      const {mapId} = props;\n      const cacheKey = `${mapId || 'default'}:${renderingType || 'default'}:${colorScheme || 'LIGHT'}`;\n\n      let mapDiv: HTMLElement;\n      let map: google.maps.Map;\n\n      if (reuseMaps && CachedMapStack.has(cacheKey)) {\n        map = CachedMapStack.pop(cacheKey) as google.maps.Map;\n        mapDiv = map.getDiv();\n\n        container.appendChild(mapDiv);\n        map.setOptions(mapOptions);\n\n        // detaching the element from the DOM lets the map fall back to its default\n        // size, setting the center will trigger reloading the map.\n        setTimeout(() => map.setCenter(map.getCenter()!), 0);\n      } else {\n        mapDiv = document.createElement('div');\n        mapDiv.style.height = '100%';\n        container.appendChild(mapDiv);\n\n        map = new google.maps.Map(mapDiv, {\n          ...mapOptions,\n          ...(renderingType\n            ? {renderingType: renderingType as google.maps.RenderingType}\n            : {}),\n          ...(colorScheme\n            ? {colorScheme: colorScheme as google.maps.ColorScheme}\n            : {})\n        });\n      }\n\n      setMap(map);\n      addMapInstance(map, id);\n\n      if (defaultBounds) {\n        const {padding, ...defBounds} = defaultBounds;\n        map.fitBounds(defBounds, padding);\n      }\n\n      // prevent map not rendering due to missing configuration\n      else if (!hasZoom || !hasCenter) {\n        map.fitBounds({east: 180, west: -180, south: -90, north: 90});\n      }\n\n      // the savedMapState is used to restore the camera parameters when the mapId is changed\n      if (savedMapStateRef.current) {\n        const {mapId: savedMapId, cameraState: savedCameraState} =\n          savedMapStateRef.current;\n        if (savedMapId !== mapId) {\n          map.setOptions(savedCameraState);\n        }\n      }\n\n      return () => {\n        savedMapStateRef.current = {\n          mapId,\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          cameraState: cameraStateRef.current\n        };\n\n        // detach the map-div from the dom\n        mapDiv.remove();\n\n        if (reuseMaps) {\n          // push back on the stack\n          CachedMapStack.push(cacheKey, map);\n        } else {\n          // remove all event-listeners to minimize the possibility of memory-leaks\n          google.maps.event.clearInstanceListeners(map);\n        }\n\n        setMap(null);\n        removeMapInstance(id);\n      };\n    },\n\n    // some dependencies are ignored in the list below:\n    //  - defaultBounds and the default* camera props will only be used once, and\n    //    changes should be ignored\n    //  - mapOptions has special hooks that take care of updating the options\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      container,\n      apiIsLoaded,\n      id,\n\n      // these props can't be changed after initialization and require a new\n      // instance to be created\n      props.mapId,\n      props.renderingType,\n      props.colorScheme\n    ]\n  );\n\n  return [map, containerRef, cameraStateRef] as const;\n}\n","import {Ref, useCallback, useState} from 'react';\n\nexport function useCallbackRef<T>() {\n  const [el, setEl] = useState<T | null>(null);\n  const ref = useCallback((value: T) => setEl(value), [setEl]);\n\n  return [el, ref as Ref<T>] as const;\n}\n","/* eslint-disable complexity */\nimport React, {\n  CSSProperties,\n  FunctionComponent,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useMemo\n} from 'react';\n\nimport {APIProviderContext} from '../api-provider';\n\nimport {MapEventProps, useMapEvents} from './use-map-events';\nimport {useMapOptions} from './use-map-options';\nimport {useApiLoadingStatus} from '../../hooks/use-api-loading-status';\nimport {APILoadingStatus} from '../../libraries/api-loading-status';\nimport {\n  DeckGlCompatProps,\n  useDeckGLCameraUpdate\n} from './use-deckgl-camera-update';\nimport {toLatLngLiteral} from '../../libraries/lat-lng-utils';\nimport {useMapCameraParams} from './use-map-camera-params';\nimport {AuthFailureMessage} from './auth-failure-message';\nimport {useMapInstance} from './use-map-instance';\n\nexport interface GoogleMapsContextValue {\n  map: google.maps.Map | null;\n}\nexport const GoogleMapsContext =\n  React.createContext<GoogleMapsContextValue | null>(null);\n\nexport type {\n  MapCameraChangedEvent,\n  MapEvent,\n  MapEventProps,\n  MapMouseEvent\n} from './use-map-events';\n\nexport type MapCameraProps = {\n  center: google.maps.LatLngLiteral;\n  zoom: number;\n  heading?: number;\n  tilt?: number;\n};\n\n// ColorScheme and RenderingType are redefined here to make them usable before the\n// maps API has been fully loaded.\n\nexport const ColorScheme = {\n  DARK: 'DARK',\n  LIGHT: 'LIGHT',\n  FOLLOW_SYSTEM: 'FOLLOW_SYSTEM'\n} as const;\nexport type ColorScheme = (typeof ColorScheme)[keyof typeof ColorScheme];\n\nexport const RenderingType = {\n  VECTOR: 'VECTOR',\n  RASTER: 'RASTER',\n  UNINITIALIZED: 'UNINITIALIZED'\n} as const;\nexport type RenderingType = (typeof RenderingType)[keyof typeof RenderingType];\n\n/**\n * Props for the Map Component\n */\nexport type MapProps = PropsWithChildren<\n  Omit<google.maps.MapOptions, 'renderingType' | 'colorScheme'> &\n    MapEventProps &\n    DeckGlCompatProps & {\n      /**\n       * An id for the map, this is required when multiple maps are present\n       * in the same APIProvider context.\n       */\n      id?: string;\n\n      /**\n       * Additional style rules to apply to the map dom-element.\n       */\n      style?: CSSProperties;\n\n      /**\n       * Additional css class-name to apply to the element containing the map.\n       */\n      className?: string;\n\n      /**\n       * The color-scheme to use for the map.\n       */\n      colorScheme?: ColorScheme;\n\n      /**\n       * The rendering-type to be used.\n       */\n      renderingType?: RenderingType;\n\n      /**\n       * Indicates that the map will be controlled externally. Disables all controls provided by the map itself.\n       */\n      controlled?: boolean;\n\n      /**\n       * Enable caching of map-instances created by this component.\n       */\n      reuseMaps?: boolean;\n\n      defaultCenter?: google.maps.LatLngLiteral;\n      defaultZoom?: number;\n      defaultHeading?: number;\n      defaultTilt?: number;\n      /**\n       * Alternative way to specify the default camera props as a geographic region that should be fully visible\n       */\n      defaultBounds?: google.maps.LatLngBoundsLiteral & {\n        padding?: number | google.maps.Padding;\n      };\n    }\n>;\n\nexport const Map: FunctionComponent<MapProps> = (props: MapProps) => {\n  const {children, id, className, style} = props;\n  const context = useContext(APIProviderContext);\n  const loadingStatus = useApiLoadingStatus();\n\n  if (!context) {\n    throw new Error(\n      '<Map> can only be used inside an <ApiProvider> component.'\n    );\n  }\n\n  const [map, mapRef, cameraStateRef] = useMapInstance(props, context);\n\n  useMapCameraParams(map, cameraStateRef, props);\n  useMapEvents(map, props);\n  useMapOptions(map, props);\n\n  const isDeckGlControlled = useDeckGLCameraUpdate(map, props);\n  const isControlledExternally = !!props.controlled;\n\n  // disable interactions with the map for externally controlled maps\n  useEffect(() => {\n    if (!map) return;\n\n    // fixme: this doesn't seem to belong here (and it's mostly there for convenience anyway).\n    //   The reasoning is that a deck.gl canvas will be put on top of the map, rendering\n    //   any default map controls pretty much useless\n    if (isDeckGlControlled) {\n      map.setOptions({disableDefaultUI: true});\n    }\n\n    // disable all control-inputs when the map is controlled externally\n    if (isDeckGlControlled || isControlledExternally) {\n      map.setOptions({\n        gestureHandling: 'none',\n        keyboardShortcuts: false\n      });\n    }\n\n    return () => {\n      map.setOptions({\n        gestureHandling: props.gestureHandling,\n        keyboardShortcuts: props.keyboardShortcuts\n      });\n    };\n  }, [\n    map,\n    isDeckGlControlled,\n    isControlledExternally,\n    props.gestureHandling,\n    props.keyboardShortcuts\n  ]);\n\n  // setup a stable cameraOptions object that can be used as dependency\n  const center = props.center ? toLatLngLiteral(props.center) : null;\n  let lat: number | null = null;\n  let lng: number | null = null;\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat as number;\n    lng = center.lng as number;\n  }\n\n  const cameraOptions: google.maps.CameraOptions = useMemo(() => {\n    return {\n      center: {lat: lat ?? 0, lng: lng ?? 0},\n      zoom: props.zoom ?? 0,\n      heading: props.heading ?? 0,\n      tilt: props.tilt ?? 0\n    };\n  }, [lat, lng, props.zoom, props.heading, props.tilt]);\n\n  // externally controlled mode: reject all camera changes that don't correspond to changes in props\n  useLayoutEffect(() => {\n    if (!map || !isControlledExternally) return;\n\n    map.moveCamera(cameraOptions);\n    const listener = map.addListener('bounds_changed', () => {\n      map.moveCamera(cameraOptions);\n    });\n\n    return () => listener.remove();\n  }, [map, isControlledExternally, cameraOptions]);\n\n  const combinedStyle: CSSProperties = useMemo(\n    () => ({\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      // when using deckgl, the map should be sent to the back\n      zIndex: isDeckGlControlled ? -1 : 0,\n\n      ...style\n    }),\n    [style, isDeckGlControlled]\n  );\n\n  const contextValue: GoogleMapsContextValue = useMemo(() => ({map}), [map]);\n\n  if (loadingStatus === APILoadingStatus.AUTH_FAILURE) {\n    return (\n      <div\n        style={{position: 'relative', ...(className ? {} : combinedStyle)}}\n        className={className}>\n        <AuthFailureMessage />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={mapRef}\n      data-testid={'map'}\n      style={className ? undefined : combinedStyle}\n      className={className}\n      {...(id ? {id} : {})}>\n      {map ? (\n        <GoogleMapsContext.Provider value={contextValue}>\n          {children}\n        </GoogleMapsContext.Provider>\n      ) : null}\n    </div>\n  );\n};\n\n// The deckGLViewProps flag here indicates to deck.gl that the Map component is\n// able to handle viewProps from deck.gl when deck.gl is used to control the map.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Map as any).deckGLViewProps = true;\n","import {useLayoutEffect} from 'react';\nimport {CameraStateRef} from './use-tracked-camera-state-ref';\nimport {toLatLngLiteral} from '../../libraries/lat-lng-utils';\nimport {MapProps} from '../map';\n\nexport function useMapCameraParams(\n  map: google.maps.Map | null,\n  cameraStateRef: CameraStateRef,\n  mapProps: MapProps\n) {\n  const center = mapProps.center ? toLatLngLiteral(mapProps.center) : null;\n\n  let lat: number | null = null;\n  let lng: number | null = null;\n\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat as number;\n    lng = center.lng as number;\n  }\n\n  const zoom: number | null = Number.isFinite(mapProps.zoom)\n    ? (mapProps.zoom as number)\n    : null;\n  const heading: number | null = Number.isFinite(mapProps.heading)\n    ? (mapProps.heading as number)\n    : null;\n  const tilt: number | null = Number.isFinite(mapProps.tilt)\n    ? (mapProps.tilt as number)\n    : null;\n\n  // the following effect runs for every render of the map component and checks\n  // if there are differences between the known state of the map instance\n  // (cameraStateRef, which is updated by all bounds_changed events) and the\n  // desired state in the props.\n\n  useLayoutEffect(() => {\n    if (!map) return;\n\n    const nextCamera: google.maps.CameraOptions = {};\n    let needsUpdate = false;\n\n    if (\n      lat !== null &&\n      lng !== null &&\n      (cameraStateRef.current.center.lat !== lat ||\n        cameraStateRef.current.center.lng !== lng)\n    ) {\n      nextCamera.center = {lat, lng};\n      needsUpdate = true;\n    }\n\n    if (zoom !== null && cameraStateRef.current.zoom !== zoom) {\n      nextCamera.zoom = zoom as number;\n      needsUpdate = true;\n    }\n\n    if (heading !== null && cameraStateRef.current.heading !== heading) {\n      nextCamera.heading = heading as number;\n      needsUpdate = true;\n    }\n\n    if (tilt !== null && cameraStateRef.current.tilt !== tilt) {\n      nextCamera.tilt = tilt as number;\n      needsUpdate = true;\n    }\n\n    if (needsUpdate) {\n      map.moveCamera(nextCamera);\n    }\n  });\n}\n","import {useLayoutEffect} from 'react';\n\nexport type DeckGlCompatProps = {\n  /**\n   * Viewport from deck.gl\n   */\n  viewport?: unknown;\n  /**\n   * View state from deck.gl\n   */\n  viewState?: Record<string, unknown>;\n  /**\n   * Initial View State from deck.gl\n   */\n  initialViewState?: Record<string, unknown>;\n};\n\n/**\n * Internal hook that updates the camera when deck.gl viewState changes.\n * @internal\n */\nexport function useDeckGLCameraUpdate(\n  map: google.maps.Map | null,\n  props: DeckGlCompatProps\n) {\n  const {viewport, viewState} = props;\n  const isDeckGlControlled = !!viewport;\n\n  useLayoutEffect(() => {\n    if (!map || !viewState) return;\n\n    const {\n      latitude,\n      longitude,\n      bearing: heading,\n      pitch: tilt,\n      zoom\n    } = viewState as Record<string, number>;\n\n    map.moveCamera({\n      center: {lat: latitude, lng: longitude},\n      heading,\n      tilt,\n      zoom: zoom + 1\n    });\n  }, [map, viewState]);\n\n  return isDeckGlControlled;\n}\n","const shownMessages = new Set();\n\nexport function logErrorOnce(...args: Parameters<typeof console.error>) {\n  const key = JSON.stringify(args);\n\n  if (!shownMessages.has(key)) {\n    shownMessages.add(key);\n\n    console.error(...args);\n  }\n}\n","import {useContext} from 'react';\n\nimport {APIProviderContext} from '../components/api-provider';\nimport {GoogleMapsContext} from '../components/map';\nimport {logErrorOnce} from '../libraries/errors';\n\n/**\n * Retrieves a map-instance from the context. This is either an instance\n * identified by id or the parent map instance if no id is specified.\n * Returns null if neither can be found.\n */\nexport const useMap = (id: string | null = null): google.maps.Map | null => {\n  const ctx = useContext(APIProviderContext);\n  const {map} = useContext(GoogleMapsContext) || {};\n\n  if (ctx === null) {\n    logErrorOnce(\n      'useMap(): failed to retrieve APIProviderContext. ' +\n        'Make sure that the <APIProvider> component exists and that the ' +\n        'component you are calling `useMap()` from is a sibling of the ' +\n        '<APIProvider>.'\n    );\n\n    return null;\n  }\n\n  const {mapInstances} = ctx;\n\n  // if an id is specified, the corresponding map or null is returned\n  if (id !== null) return mapInstances[id] || null;\n\n  // otherwise, return the closest ancestor\n  if (map) return map;\n\n  // finally, return the default map instance\n  return mapInstances['default'] || null;\n};\n","import {useContext, useEffect} from 'react';\n\nimport {APIProviderContext} from '../components/api-provider';\nimport {useApiIsLoaded} from './use-api-is-loaded';\n\ninterface ApiLibraries {\n  core: google.maps.CoreLibrary;\n  maps: google.maps.MapsLibrary;\n  places: google.maps.PlacesLibrary;\n  geocoding: google.maps.GeocodingLibrary;\n  routes: google.maps.RoutesLibrary;\n  marker: google.maps.MarkerLibrary;\n  geometry: google.maps.GeometryLibrary;\n  elevation: google.maps.ElevationLibrary;\n  streetView: google.maps.StreetViewLibrary;\n  journeySharing: google.maps.JourneySharingLibrary;\n  drawing: google.maps.DrawingLibrary;\n  visualization: google.maps.VisualizationLibrary;\n}\n\nexport function useMapsLibrary<\n  K extends keyof ApiLibraries,\n  V extends ApiLibraries[K]\n>(name: K): V | null;\n\nexport function useMapsLibrary(name: string) {\n  const apiIsLoaded = useApiIsLoaded();\n  const ctx = useContext(APIProviderContext);\n\n  useEffect(() => {\n    if (!apiIsLoaded || !ctx) return;\n\n    // Trigger loading the libraries via our proxy-method.\n    // The returned promise is ignored, since importLibrary will update loadedLibraries\n    // list in the context, triggering a re-render.\n    void ctx.importLibrary(name);\n  }, [apiIsLoaded, ctx, name]);\n\n  return ctx?.loadedLibraries[name] || null;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {useEffect} from 'react';\n\n/**\n * Internally used to bind events to Maps JavaScript API objects.\n * @internal\n */\nexport function useMapsEventListener<T extends (...args: any[]) => void>(\n  target?: object | null,\n  name?: string,\n  callback?: T | null\n) {\n  useEffect(() => {\n    if (!target || !name || !callback) return;\n\n    const listener = google.maps.event.addListener(target, name, callback);\n\n    return () => listener.remove();\n  }, [target, name, callback]);\n}\n","import {useEffect} from 'react';\n\n/**\n * Internally used to copy values from props into API-Objects\n * whenever they change.\n *\n * @example\n *   usePropBinding(marker, 'position', position);\n *\n * @internal\n */\nexport function usePropBinding<T extends object, K extends keyof T>(\n  object: T | null,\n  prop: K,\n  value: T[K]\n) {\n  useEffect(() => {\n    if (!object) return;\n\n    object[prop] = value;\n  }, [object, prop, value]);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {useEffect} from 'react';\n\n/**\n * Internally used to bind events to DOM nodes.\n * @internal\n */\nexport function useDomEventListener<T extends (...args: any[]) => void>(\n  target?: Node | null,\n  name?: string,\n  callback?: T | null\n) {\n  useEffect(() => {\n    if (!target || !name || !callback) return;\n\n    target.addEventListener(name, callback);\n\n    return () => target.removeEventListener(name, callback);\n  }, [target, name, callback]);\n}\n","/* eslint-disable complexity */\nimport React, {\n  Children,\n  CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState\n} from 'react';\n\nimport {createPortal} from 'react-dom';\nimport {useMap} from '../hooks/use-map';\nimport {useMapsLibrary} from '../hooks/use-maps-library';\n\nimport type {Ref, PropsWithChildren} from 'react';\nimport {useMapsEventListener} from '../hooks/use-maps-event-listener';\nimport {usePropBinding} from '../hooks/use-prop-binding';\nimport {useDomEventListener} from '../hooks/use-dom-event-listener';\n\nexport interface AdvancedMarkerContextValue {\n  marker: google.maps.marker.AdvancedMarkerElement;\n}\n\nexport function isAdvancedMarker(\n  marker: google.maps.Marker | google.maps.marker.AdvancedMarkerElement\n): marker is google.maps.marker.AdvancedMarkerElement {\n  return (\n    (marker as google.maps.marker.AdvancedMarkerElement).content !== undefined\n  );\n}\n\nfunction isElementNode(node: Node): node is HTMLElement {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n\n/**\n * Copy of the `google.maps.CollisionBehavior` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nexport const CollisionBehavior = {\n  REQUIRED: 'REQUIRED',\n  REQUIRED_AND_HIDES_OPTIONAL: 'REQUIRED_AND_HIDES_OPTIONAL',\n  OPTIONAL_AND_HIDES_LOWER_PRIORITY: 'OPTIONAL_AND_HIDES_LOWER_PRIORITY'\n} as const;\nexport type CollisionBehavior =\n  (typeof CollisionBehavior)[keyof typeof CollisionBehavior];\n\nexport const AdvancedMarkerContext =\n  React.createContext<AdvancedMarkerContextValue | null>(null);\n\n// [xPosition, yPosition] when the top left corner is [0, 0]\nexport const AdvancedMarkerAnchorPoint = {\n  TOP_LEFT: ['0%', '0%'],\n  TOP_CENTER: ['50%', '0%'],\n  TOP: ['50%', '0%'],\n  TOP_RIGHT: ['100%', '0%'],\n  LEFT_CENTER: ['0%', '50%'],\n  LEFT_TOP: ['0%', '0%'],\n  LEFT: ['0%', '50%'],\n  LEFT_BOTTOM: ['0%', '100%'],\n  RIGHT_TOP: ['100%', '0%'],\n  RIGHT: ['100%', '50%'],\n  RIGHT_CENTER: ['100%', '50%'],\n  RIGHT_BOTTOM: ['100%', '100%'],\n  BOTTOM_LEFT: ['0%', '100%'],\n  BOTTOM_CENTER: ['50%', '100%'],\n  BOTTOM: ['50%', '100%'],\n  BOTTOM_RIGHT: ['100%', '100%'],\n  CENTER: ['50%', '50%']\n} as const;\n\nexport type AdvancedMarkerAnchorPoint =\n  (typeof AdvancedMarkerAnchorPoint)[keyof typeof AdvancedMarkerAnchorPoint];\n\ntype AdvancedMarkerEventProps = {\n  onClick?: (e: google.maps.MapMouseEvent) => void;\n  onMouseEnter?: (e: google.maps.MapMouseEvent['domEvent']) => void;\n  onMouseLeave?: (e: google.maps.MapMouseEvent['domEvent']) => void;\n  onDrag?: (e: google.maps.MapMouseEvent) => void;\n  onDragStart?: (e: google.maps.MapMouseEvent) => void;\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void;\n};\n\nexport type AdvancedMarkerProps = PropsWithChildren<\n  Omit<\n    google.maps.marker.AdvancedMarkerElementOptions,\n    'gmpDraggable' | 'gmpClickable' | 'content' | 'map' | 'collisionBehavior'\n  > &\n    AdvancedMarkerEventProps & {\n      draggable?: boolean;\n      clickable?: boolean;\n      collisionBehavior?: CollisionBehavior;\n      /**\n       * The anchor point for the Advanced Marker.\n       * Either use one of the predefined anchor point from the \"AdvancedMarkerAnchorPoint\" export\n       * or provide a string tuple in the form of [\"xPosition\", \"yPosition\"].\n       * The position is measured from the top-left corner and\n       * can be anything that can be consumed by a CSS translate() function.\n       * For example in percent (\"50%\") or in pixels (\"20px\").\n       */\n      anchorPoint?: AdvancedMarkerAnchorPoint | [string, string];\n      /**\n       * A className for the content element.\n       * (can only be used with HTML Marker content)\n       */\n      className?: string;\n      /**\n       * Additional styles to apply to the content element.\n       */\n      style?: CSSProperties;\n    }\n>;\n\ntype MarkerContentProps = PropsWithChildren & {\n  styles?: CSSProperties;\n  className?: string;\n  anchorPoint?: AdvancedMarkerAnchorPoint | [string, string];\n};\n\nconst MarkerContent = ({\n  children,\n  styles,\n  className,\n  anchorPoint\n}: MarkerContentProps) => {\n  const [xTranslation, yTranslation] =\n    anchorPoint ?? AdvancedMarkerAnchorPoint['BOTTOM'];\n\n  // The \"translate(50%, 100%)\" is here to counter and reset the default anchoring of the advanced marker element\n  // that comes from the api\n  const transformStyle = `translate(50%, 100%) translate(-${xTranslation}, -${yTranslation})`;\n\n  return (\n    // anchoring container\n    <div style={{transform: transformStyle}}>\n      {/* AdvancedMarker div that user can give styles and classes */}\n      <div className={className} style={styles}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport type CustomMarkerContent =\n  | (HTMLDivElement & {isCustomMarker?: boolean})\n  | null;\n\nexport type AdvancedMarkerRef = google.maps.marker.AdvancedMarkerElement | null;\nfunction useAdvancedMarker(props: AdvancedMarkerProps) {\n  const [marker, setMarker] =\n    useState<google.maps.marker.AdvancedMarkerElement | null>(null);\n  const [contentContainer, setContentContainer] =\n    useState<HTMLDivElement | null>(null);\n\n  const map = useMap();\n  const markerLibrary = useMapsLibrary('marker');\n\n  const {\n    children,\n    onClick,\n    className,\n    onMouseEnter,\n    onMouseLeave,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    collisionBehavior,\n    clickable,\n    draggable,\n    position,\n    title,\n    zIndex\n  } = props;\n\n  const numChildren = Children.count(children);\n\n  // create an AdvancedMarkerElement instance and add it to the map once available\n  useEffect(() => {\n    if (!map || !markerLibrary) return;\n\n    const newMarker = new markerLibrary.AdvancedMarkerElement();\n    newMarker.map = map;\n\n    setMarker(newMarker);\n\n    // create the container for marker content if there are children\n    let contentElement: CustomMarkerContent = null;\n    if (numChildren > 0) {\n      contentElement = document.createElement('div');\n\n      // We need some kind of flag to identify the custom marker content\n      // in the infowindow component. Choosing a custom property instead of a className\n      // to not encourage users to style the marker content directly.\n      contentElement.isCustomMarker = true;\n\n      newMarker.content = contentElement;\n      setContentContainer(contentElement);\n    }\n\n    return () => {\n      newMarker.map = null;\n      contentElement?.remove();\n      setMarker(null);\n      setContentContainer(null);\n    };\n  }, [map, markerLibrary, numChildren]);\n\n  // When no children are present we don't have our own wrapper div\n  // which usually gets the user provided className. In this case\n  // we set the className directly on the marker.content element that comes\n  // with the AdvancedMarker.\n  useEffect(() => {\n    if (!marker || !marker.content || numChildren > 0) return;\n\n    (marker.content as HTMLElement).className = className || '';\n  }, [marker, className, numChildren]);\n\n  // copy other props\n  usePropBinding(marker, 'position', position);\n  usePropBinding(marker, 'title', title ?? '');\n  usePropBinding(marker, 'zIndex', zIndex);\n  usePropBinding(\n    marker,\n    'collisionBehavior',\n    collisionBehavior as google.maps.CollisionBehavior\n  );\n\n  // set gmpDraggable from props (when unspecified, it's true if any drag-event\n  // callbacks are specified)\n  useEffect(() => {\n    if (!marker) return;\n\n    if (draggable !== undefined) marker.gmpDraggable = draggable;\n    else if (onDrag || onDragStart || onDragEnd) marker.gmpDraggable = true;\n    else marker.gmpDraggable = false;\n  }, [marker, draggable, onDrag, onDragEnd, onDragStart]);\n\n  // set gmpClickable from props (when unspecified, it's true if the onClick or one of\n  // the hover events callbacks are specified)\n  useEffect(() => {\n    if (!marker) return;\n\n    const gmpClickable =\n      clickable !== undefined ||\n      Boolean(onClick) ||\n      Boolean(onMouseEnter) ||\n      Boolean(onMouseLeave);\n\n    // gmpClickable is only available in beta version of the\n    // maps api (as of 2024-10-10)\n    marker.gmpClickable = gmpClickable;\n\n    // enable pointer events for the markers with custom content\n    if (gmpClickable && marker?.content && isElementNode(marker.content)) {\n      marker.content.style.pointerEvents = 'none';\n\n      if (marker.content.firstElementChild) {\n        (marker.content.firstElementChild as HTMLElement).style.pointerEvents =\n          'all';\n      }\n    }\n  }, [marker, clickable, onClick, onMouseEnter, onMouseLeave]);\n\n  useMapsEventListener(marker, 'click', onClick);\n  useMapsEventListener(marker, 'drag', onDrag);\n  useMapsEventListener(marker, 'dragstart', onDragStart);\n  useMapsEventListener(marker, 'dragend', onDragEnd);\n\n  useDomEventListener(marker?.element, 'mouseenter', onMouseEnter);\n  useDomEventListener(marker?.element, 'mouseleave', onMouseLeave);\n\n  return [marker, contentContainer] as const;\n}\n\nexport const AdvancedMarker = forwardRef(\n  (props: AdvancedMarkerProps, ref: Ref<AdvancedMarkerRef>) => {\n    const {children, style, className, anchorPoint} = props;\n    const [marker, contentContainer] = useAdvancedMarker(props);\n\n    const advancedMarkerContextValue: AdvancedMarkerContextValue | null =\n      useMemo(() => (marker ? {marker} : null), [marker]);\n\n    useImperativeHandle(\n      ref,\n      () => marker as google.maps.marker.AdvancedMarkerElement,\n      [marker]\n    );\n\n    if (!contentContainer) return null;\n\n    return (\n      <AdvancedMarkerContext.Provider value={advancedMarkerContextValue}>\n        {createPortal(\n          <MarkerContent\n            anchorPoint={anchorPoint}\n            styles={style}\n            className={className}>\n            {children}\n          </MarkerContent>,\n          contentContainer\n        )}\n      </AdvancedMarkerContext.Provider>\n    );\n  }\n);\n\nexport function useAdvancedMarkerRef() {\n  const [marker, setMarker] =\n    useState<google.maps.marker.AdvancedMarkerElement | null>(null);\n\n  const refCallback = useCallback((m: AdvancedMarkerRef | null) => {\n    setMarker(m);\n  }, []);\n\n  return [refCallback, marker] as const;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/*\n * The code in this file was adapted from the internal react-dom-bindings package.\n * https://github.com/facebook/react/tree/4508873393058e86bed308b56e49ec883ece59d1/packages/react-dom-bindings\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {CSSProperties} from 'react';\n\nexport function setValueForStyles(\n  element: HTMLElement,\n  styles: CSSProperties | null,\n  prevStyles: CSSProperties | null\n) {\n  if (styles != null && typeof styles !== 'object') {\n    throw new Error(\n      'The `style` prop expects a mapping from style properties to values, ' +\n        \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\n        'using JSX.'\n    );\n  }\n\n  const elementStyle = element.style;\n\n  // without `prevStyles`, just set all values\n  if (prevStyles == null) {\n    if (styles == null) return;\n\n    for (const styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) continue;\n\n      setValueForStyle(\n        elementStyle,\n        styleName,\n        styles[styleName as keyof CSSProperties]\n      );\n    }\n\n    return;\n  }\n\n  // unset all styles in `prevStyles` that aren't in `styles`\n  for (const styleName in prevStyles) {\n    if (\n      prevStyles.hasOwnProperty(styleName) &&\n      (styles == null || !styles.hasOwnProperty(styleName))\n    ) {\n      // Clear style\n      const isCustomProperty = styleName.indexOf('--') === 0;\n      if (isCustomProperty) {\n        elementStyle.setProperty(styleName, '');\n      } else if (styleName === 'float') {\n        elementStyle.cssFloat = '';\n      } else {\n        elementStyle[styleName as any] = '';\n      }\n    }\n  }\n\n  // only assign values from `styles` that are different from `prevStyles`\n  if (styles == null) return;\n\n  for (const styleName in styles) {\n    const value = styles[styleName as keyof CSSProperties];\n    if (\n      styles.hasOwnProperty(styleName) &&\n      prevStyles[styleName as keyof CSSProperties] !== value\n    ) {\n      setValueForStyle(elementStyle, styleName, value);\n    }\n  }\n}\n\nfunction setValueForStyle(\n  elementStyle: CSSStyleDeclaration,\n  styleName: string,\n  value: unknown\n) {\n  const isCustomProperty = styleName.indexOf('--') === 0;\n\n  // falsy values will unset the style property\n  if (value == null || typeof value === 'boolean' || value === '') {\n    if (isCustomProperty) {\n      elementStyle.setProperty(styleName, '');\n    } else if (styleName === 'float') {\n      elementStyle.cssFloat = '';\n    } else {\n      elementStyle[styleName as any] = '';\n    }\n  }\n\n  // custom properties can't be directly assigned\n  else if (isCustomProperty) {\n    elementStyle.setProperty(styleName, value as string);\n  }\n\n  // numeric values are treated as 'px' unless the style property expects unitless numbers\n  else if (\n    typeof value === 'number' &&\n    value !== 0 &&\n    !isUnitlessNumber(styleName)\n  ) {\n    elementStyle[styleName as any] = value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  // everything else can just be assigned\n  else {\n    if (styleName === 'float') {\n      elementStyle.cssFloat = value as string;\n    } else {\n      elementStyle[styleName as any] = ('' + value).trim();\n    }\n  }\n}\n\n// CSS properties which accept numbers but are not in units of \"px\".\nconst unitlessNumbers = new Set([\n  'animationIterationCount',\n  'aspectRatio',\n  'borderImageOutset',\n  'borderImageSlice',\n  'borderImageWidth',\n  'boxFlex',\n  'boxFlexGroup',\n  'boxOrdinalGroup',\n  'columnCount',\n  'columns',\n  'flex',\n  'flexGrow',\n  'flexPositive',\n  'flexShrink',\n  'flexNegative',\n  'flexOrder',\n  'gridArea',\n  'gridRow',\n  'gridRowEnd',\n  'gridRowSpan',\n  'gridRowStart',\n  'gridColumn',\n  'gridColumnEnd',\n  'gridColumnSpan',\n  'gridColumnStart',\n  'fontWeight',\n  'lineClamp',\n  'lineHeight',\n  'opacity',\n  'order',\n  'orphans',\n  'scale',\n  'tabSize',\n  'widows',\n  'zIndex',\n  'zoom',\n  'fillOpacity', // SVG-related properties\n  'floodOpacity',\n  'stopOpacity',\n  'strokeDasharray',\n  'strokeDashoffset',\n  'strokeMiterlimit',\n  'strokeOpacity',\n  'strokeWidth'\n]);\nfunction isUnitlessNumber(name: string): boolean {\n  return unitlessNumbers.has(name);\n}\n","/* eslint-disable complexity */\nimport React, {\n  CSSProperties,\n  FunctionComponent,\n  PropsWithChildren,\n  ReactNode,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {createPortal} from 'react-dom';\n\nimport {useMap} from '../hooks/use-map';\nimport {useMapsEventListener} from '../hooks/use-maps-event-listener';\nimport {setValueForStyles} from '../libraries/set-value-for-styles';\nimport {useMapsLibrary} from '../hooks/use-maps-library';\nimport {useDeepCompareEffect} from '../libraries/use-deep-compare-effect';\nimport {CustomMarkerContent, isAdvancedMarker} from './advanced-marker';\n\nexport type InfoWindowProps = Omit<\n  google.maps.InfoWindowOptions,\n  'headerContent' | 'content' | 'pixelOffset'\n> & {\n  style?: CSSProperties;\n  className?: string;\n  anchor?: google.maps.Marker | google.maps.marker.AdvancedMarkerElement | null;\n  pixelOffset?: [number, number];\n  shouldFocus?: boolean;\n  onClose?: () => void;\n  onCloseClick?: () => void;\n\n  headerContent?: ReactNode;\n};\n\n/**\n * Component to render an Info Window with the Maps JavaScript API\n */\nexport const InfoWindow: FunctionComponent<\n  PropsWithChildren<InfoWindowProps>\n> = props => {\n  const {\n    // content options\n    children,\n    headerContent,\n\n    style,\n    className,\n    pixelOffset,\n\n    // open options\n    anchor,\n    shouldFocus,\n\n    // events\n    onClose,\n    onCloseClick,\n\n    // other options\n    ...infoWindowOptions\n  } = props;\n\n  // ## create infowindow instance once the mapsLibrary is available.\n  const mapsLibrary = useMapsLibrary('maps');\n  const [infoWindow, setInfoWindow] = useState<google.maps.InfoWindow | null>(\n    null\n  );\n\n  const contentContainerRef = useRef<HTMLElement | null>(null);\n  const headerContainerRef = useRef<HTMLElement | null>(null);\n\n  useEffect(\n    () => {\n      if (!mapsLibrary) return;\n\n      contentContainerRef.current = document.createElement('div');\n      headerContainerRef.current = document.createElement('div');\n\n      const opts: google.maps.InfoWindowOptions = infoWindowOptions;\n      if (pixelOffset) {\n        opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n      }\n\n      if (headerContent) {\n        // if headerContent is specified as string we can directly forward it,\n        // otherwise we'll pass the element the portal will render into\n        opts.headerContent =\n          typeof headerContent === 'string'\n            ? headerContent\n            : headerContainerRef.current;\n      }\n\n      // intentionally shadowing the state variables here\n      const infoWindow = new google.maps.InfoWindow(infoWindowOptions);\n      infoWindow.setContent(contentContainerRef.current);\n\n      setInfoWindow(infoWindow);\n\n      // unmount: remove infoWindow and content elements (note: close is called in a different effect-cleanup)\n      return () => {\n        infoWindow.setContent(null);\n\n        contentContainerRef.current?.remove();\n        headerContainerRef.current?.remove();\n\n        contentContainerRef.current = null;\n        headerContainerRef.current = null;\n\n        setInfoWindow(null);\n      };\n    },\n    // `infoWindowOptions` and other props are missing from dependencies:\n    //\n    // We don't want to re-create the infowindow instance\n    // when the options change.\n    // Updating the options is handled in the useEffect below.\n    //\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [mapsLibrary]\n  );\n\n  // ## update className and styles for `contentContainer`\n  // stores previously applied style properties, so they can be removed when unset\n  const prevStyleRef = useRef<CSSProperties | null>(null);\n  useEffect(() => {\n    if (!infoWindow || !contentContainerRef.current) return;\n\n    setValueForStyles(\n      contentContainerRef.current,\n      style || null,\n      prevStyleRef.current\n    );\n\n    prevStyleRef.current = style || null;\n\n    if (className !== contentContainerRef.current.className)\n      contentContainerRef.current.className = className || '';\n  }, [infoWindow, className, style]);\n\n  // ## update options\n  useDeepCompareEffect(\n    () => {\n      if (!infoWindow) return;\n\n      const opts: google.maps.InfoWindowOptions = infoWindowOptions;\n      if (!pixelOffset) {\n        opts.pixelOffset = null;\n      } else {\n        opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n      }\n\n      if (!headerContent) {\n        opts.headerContent = null;\n      } else {\n        opts.headerContent =\n          typeof headerContent === 'string'\n            ? headerContent\n            : headerContainerRef.current;\n      }\n\n      infoWindow.setOptions(infoWindowOptions);\n    },\n\n    // dependency `infoWindow` isn't needed since options are also passed\n    // to the constructor when a new infoWindow is created.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [infoWindowOptions, pixelOffset, headerContent]\n  );\n\n  // ## bind event handlers\n  useMapsEventListener(infoWindow, 'close', onClose);\n  useMapsEventListener(infoWindow, 'closeclick', onCloseClick);\n\n  // ## open info window when content and map are available\n  const map = useMap();\n  useDeepCompareEffect(() => {\n    // `anchor === null` means an anchor is defined but not ready yet.\n    if (!map || !infoWindow || anchor === null) return;\n\n    const isOpenedWithAnchor = !!anchor;\n    const openOptions: google.maps.InfoWindowOpenOptions = {map};\n    if (anchor) {\n      openOptions.anchor = anchor;\n\n      // Only do the infowindow adjusting when dealing with an AdvancedMarker\n      if (isAdvancedMarker(anchor) && anchor.content instanceof Element) {\n        const wrapper = anchor.content as CustomMarkerContent;\n        const wrapperBcr = wrapper?.getBoundingClientRect();\n\n        // This checks whether or not the anchor has custom content with our own\n        // div wrapper. If not, that means we have a regular AdvancedMarker without any children.\n        // In that case we do not want to adjust the infowindow since it is all handled correctly\n        // by the Google Maps API.\n        if (wrapperBcr && wrapper?.isCustomMarker) {\n          // We can safely typecast here since we control that element and we know that\n          // it is a div\n          const anchorDomContent = anchor.content.firstElementChild\n            ?.firstElementChild as Element;\n\n          const contentBcr = anchorDomContent?.getBoundingClientRect();\n\n          // center infowindow above marker\n          const anchorOffsetX =\n            contentBcr.x -\n            wrapperBcr.x +\n            (contentBcr.width - wrapperBcr.width) / 2;\n          const anchorOffsetY = contentBcr.y - wrapperBcr.y;\n\n          const opts: google.maps.InfoWindowOptions = infoWindowOptions;\n\n          opts.pixelOffset = new google.maps.Size(\n            pixelOffset ? pixelOffset[0] + anchorOffsetX : anchorOffsetX,\n            pixelOffset ? pixelOffset[1] + anchorOffsetY : anchorOffsetY\n          );\n\n          infoWindow.setOptions(opts);\n        }\n      }\n    }\n\n    if (shouldFocus !== undefined) {\n      openOptions.shouldFocus = shouldFocus;\n    }\n\n    infoWindow.open(openOptions);\n\n    return () => {\n      // Note: when the infowindow has an anchor, it will automatically show up again when the\n      // anchor was removed from the map before infoWindow.close() is called but the it gets\n      // added back to the map after that.\n      // More information here: https://issuetracker.google.com/issues/343750849\n      if (isOpenedWithAnchor) infoWindow.set('anchor', null);\n\n      infoWindow.close();\n    };\n  }, [infoWindow, anchor, map, shouldFocus, infoWindowOptions, pixelOffset]);\n\n  return (\n    <>\n      {contentContainerRef.current &&\n        createPortal(children, contentContainerRef.current)}\n\n      {headerContainerRef.current !== null &&\n        createPortal(headerContent, headerContainerRef.current)}\n    </>\n  );\n};\n","import React from 'react';\n\nexport {createStaticMapsUrl} from '../libraries/create-static-maps-url';\nexport * from '../libraries/create-static-maps-url/types';\n\n/**\n * Props for the StaticMap component\n */\nexport type StaticMapProps = {\n  url: string;\n  className?: string;\n};\n\nexport const StaticMap = (props: StaticMapProps) => {\n  const {url, className} = props;\n\n  if (!url) throw new Error('URL is required');\n\n  return <img className={className} src={url} width=\"100%\" />;\n};\n","/* eslint-disable complexity */\nimport React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react';\n\nimport {useMap} from '../hooks/use-map';\n\nimport type {Ref} from 'react';\n\ntype MarkerEventProps = {\n  onClick?: (e: google.maps.MapMouseEvent) => void;\n  onDrag?: (e: google.maps.MapMouseEvent) => void;\n  onDragStart?: (e: google.maps.MapMouseEvent) => void;\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void;\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void;\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void;\n};\n\nexport type MarkerProps = Omit<google.maps.MarkerOptions, 'map'> &\n  MarkerEventProps;\n\nexport type MarkerRef = Ref<google.maps.Marker | null>;\n\nfunction useMarker(props: MarkerProps) {\n  const [marker, setMarker] = useState<google.maps.Marker | null>(null);\n  const map = useMap();\n\n  const {\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    onMouseOver,\n    onMouseOut,\n    ...markerOptions\n  } = props;\n\n  const {position, draggable} = markerOptions;\n\n  // create marker instance and add to the map once the map is available\n  useEffect(() => {\n    if (!map) {\n      if (map === undefined)\n        console.error('<Marker> has to be inside a Map component.');\n\n      return;\n    }\n\n    const newMarker = new google.maps.Marker(markerOptions);\n    newMarker.setMap(map);\n    setMarker(newMarker);\n\n    return () => {\n      newMarker.setMap(null);\n      setMarker(null);\n    };\n    // We do not want to re-render the whole marker when the options change.\n    // Marker options update is handled in a useEffect below.\n    // Excluding markerOptions from dependency array on purpose here.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  // attach and re-attach event-handlers when any of the properties change\n  useEffect(() => {\n    if (!marker) return;\n\n    const m = marker;\n\n    // Add event listeners\n    const gme = google.maps.event;\n\n    if (onClick) gme.addListener(m, 'click', onClick);\n    if (onDrag) gme.addListener(m, 'drag', onDrag);\n    if (onDragStart) gme.addListener(m, 'dragstart', onDragStart);\n    if (onDragEnd) gme.addListener(m, 'dragend', onDragEnd);\n    if (onMouseOver) gme.addListener(m, 'mouseover', onMouseOver);\n    if (onMouseOut) gme.addListener(m, 'mouseout', onMouseOut);\n\n    marker.setDraggable(Boolean(draggable));\n\n    return () => {\n      gme.clearInstanceListeners(m);\n    };\n  }, [\n    marker,\n    draggable,\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    onMouseOver,\n    onMouseOut\n  ]);\n\n  // update markerOptions (note the dependencies aren't properly checked\n  // here, we just assume that setOptions is smart enough to not waste a\n  // lot of time updating values that didn't change)\n  useEffect(() => {\n    if (!marker) return;\n    if (markerOptions) marker.setOptions(markerOptions);\n  }, [marker, markerOptions]);\n\n  // update position when changed\n  useEffect(() => {\n    // Should not update position when draggable\n    if (draggable || !position || !marker) return;\n\n    marker.setPosition(position);\n  }, [draggable, position, marker]);\n\n  return marker;\n}\n\n/**\n * Component to render a marker on a map\n */\nexport const Marker = forwardRef((props: MarkerProps, ref: MarkerRef) => {\n  const marker = useMarker(props);\n\n  useImperativeHandle(ref, () => marker as google.maps.Marker, [marker]);\n\n  return <></>;\n});\n\nexport function useMarkerRef() {\n  const [marker, setMarker] = useState<google.maps.Marker | null>(null);\n\n  const refCallback = useCallback((m: google.maps.Marker | null) => {\n    setMarker(m);\n  }, []);\n\n  return [refCallback, marker] as const;\n}\n","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","APILoadingStatus","GoogleMapsApiLoader","load","params","onLoadingStatusChange","_window$google","libraries","split","serializedParams","this","serializeParams","listeners","push","window","google","maps","importLibrary","serializedApiParams","loadingStatus","notifyLoadingStatusListeners","initImportLibrary","console","warn","librariesToLoad","Promise","all","map","name","v","language","region","authReferrerPolicy","solutionChannel","join","error","apiPromise","loadApi","resolve","reject","_document$querySelect","scriptElement","document","createElement","urlParams","URLSearchParams","value","entries","urlParamName","replace","t","toLowerCase","set","String","async","src","MAPS_API_BASE_URL","nonce","querySelector","onerror","Error","__googleMapsCallback__","gm_authFailure","head","append","libraryName","then","fn","APIProviderContext","React","APIProvider","props","children","loaderProps","_objectWithoutPropertiesLoose","_excluded2$1","mapInstances","addMapInstance","removeMapInstance","clearMapInstances","setMapInstances","useState","mapInstance","id","arguments","undefined","instances","_extends","_ref","_toPropertyKey","useMapInstances","status","loadedLibraries","onLoad","onError","apiKey","version","otherApiParams","_excluded$3","setStatus","addLoadedLibrary","useReducer","action","librariesString","useMemo","JSON","stringify","useCallback","_google","res","useEffect","channel","useGoogleMapsApiLoader","contextValue","Provider","createMapEvent","type","srcEvent","ev","detail","stoppable","stop","cameraEventTypes","includes","camEvent","center","getCenter","zoom","getZoom","heading","getHeading","tilt","getTilt","bounds","getBounds","Number","isFinite","toJSON","lat","lng","north","east","south","west","mouseEventTypes","_srcEvent$latLng","mouseEvent","domEvent","latLng","placeId","propNameToEventType","onBoundsChanged","onCenterChanged","onClick","onContextmenu","onDblclick","onDrag","onDragend","onDragstart","onHeadingChanged","onIdle","onIsFractionalZoomEnabledChanged","onMapCapabilitiesChanged","onMapTypeIdChanged","onMousemove","onMouseout","onMouseover","onProjectionChanged","onRenderingTypeChanged","onTilesLoaded","onTiltChanged","onZoomChanged","onCameraChanged","eventPropNames","useDeepCompareEffect","effect","deps","ref","useRef","current","isDeepEqual","mapOptionKeys","Set","useApiLoadingStatus","_useContext","useContext","toLatLngLiteral","obj","isLatLngLiteral","AuthFailureMessage","style","position","top","left","bottom","right","zIndex","display","flexFlow","textAlign","justifyContent","fontSize","color","background","padding","useApiIsLoaded","useTrackedCameraStateRef","forceUpdate","x","useForceUpdate","listener","event","addListener","assign","handleBoundsChange","remove","CachedMapStack","has","pop","useMapInstance","context","apiIsLoaded","setMap","container","containerRef","el","setEl","useCallbackRef","cameraStateRef","defaultBounds","defaultCenter","defaultZoom","defaultHeading","defaultTilt","reuseMaps","renderingType","colorScheme","mapOptions","_excluded$2","hasZoom","hasCenter","savedMapStateRef","mapId","cacheKey","concat","mapDiv","getDiv","appendChild","setOptions","setTimeout","setCenter","height","Map","defBounds","_excluded2","fitBounds","savedMapId","cameraState","savedCameraState","clearInstanceListeners","GoogleMapsContext","className","mapRef","mapProps","useLayoutEffect","nextCamera","needsUpdate","moveCamera","useMapCameraParams","propName","handler","eventType","useMapEvents","useMapOptions","isDeckGlControlled","viewport","viewState","latitude","longitude","bearing","pitch","useDeckGLCameraUpdate","isControlledExternally","controlled","disableDefaultUI","gestureHandling","keyboardShortcuts","cameraOptions","_lat","_lng","_props$zoom","_props$heading","_props$tilt","combinedStyle","width","deckGLViewProps","shownMessages","logErrorOnce","_len","args","_key","add","useMap","ctx","useMapsLibrary","useMapsEventListener","target","callback","usePropBinding","object","prop","useDomEventListener","addEventListener","removeEventListener","AdvancedMarkerContext","AdvancedMarkerAnchorPoint","TOP_LEFT","TOP_CENTER","TOP","TOP_RIGHT","LEFT_CENTER","LEFT_TOP","LEFT","LEFT_BOTTOM","RIGHT_TOP","RIGHT","RIGHT_CENTER","RIGHT_BOTTOM","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM","BOTTOM_RIGHT","CENTER","MarkerContent","_ref2","styles","anchorPoint","xTranslation","yTranslation","transformStyle","transform","useAdvancedMarker","marker","setMarker","contentContainer","setContentContainer","markerLibrary","onMouseEnter","onMouseLeave","onDragStart","onDragEnd","collisionBehavior","clickable","draggable","title","numChildren","Children","count","newMarker","AdvancedMarkerElement","contentElement","isCustomMarker","content","_contentElement","gmpDraggable","gmpClickable","Boolean","nodeType","Node","ELEMENT_NODE","pointerEvents","firstElementChild","element","AdvancedMarker","forwardRef","advancedMarkerContextValue","useImperativeHandle","createPortal","useAdvancedMarkerRef","m","setValueForStyle","elementStyle","styleName","isCustomProperty","indexOf","setProperty","cssFloat","unitlessNumbers","trim","InfoWindow","headerContent","pixelOffset","anchor","shouldFocus","onClose","onCloseClick","infoWindowOptions","_excluded$1","mapsLibrary","infoWindow","setInfoWindow","contentContainerRef","headerContainerRef","opts","Size","setContent","_contentContainerRef$","_headerContainerRef$c","prevStyleRef","prevStyles","setValueForStyles","isOpenedWithAnchor","openOptions","Element","wrapper","wrapperBcr","getBoundingClientRect","_anchor$content$first","anchorDomContent","contentBcr","anchorOffsetX","anchorOffsetY","y","open","close","onMouseOver","onMouseOut","markerOptions","_excluded","Marker","gme","setDraggable","setPosition","useMarker","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","useBootstrapPrefix","prefix","defaultPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","useButtonProps","tagName","disabled","href","rel","role","tabIndex","meta","handleClick","isTrivialHref","preventDefault","stopPropagation","onKeyDown","Button","as","asProp","r","e","n","buttonProps","Component","_jsx","displayName","bsPrefix","variant","size","active","_objectWithoutProperties","_objectSpread","classNames"],"sourceRoot":""}