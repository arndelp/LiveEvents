{"version":3,"file":"static/js/21.80c4619a.chunk.js","mappings":"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","sources":["Components/FormContact.jsx","Pages/Contact.jsx"],"sourcesContent":["import React, { useState}  from 'react';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nexport const apiURL = process.env.REACT_APP_API_URL;\n\nfunction FormContact() {\n    const navigate = useNavigate()\n\n    //définition des variables    \n    const [data, setData] =useState({\n        lastname: \"\",\n        firstname: \"\",\n        email: \"\",\n        message:\"\"         \n    })\n// état du recaptcha\n   const [value, setValue] = useState(null)\n    \n    \n\n    //fonction submit utilisant le client HTTP Axios, permet le POST des data à l'url de l'api\n    function submit(e){\n        e.preventDefault(); //empêche la soumission du formulaire   \n        Axios.post(`${apiURL}/api/contacts`,{\n            lastname: data.lastname,\n            firstname: data.firstname,\n            email: data.email,\n            message: data.message\n        }, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',                \n            }\n        })\n        .then(res=>{\n            console.log(res.data)\n            navigate('/LiveEvents/Submitted')\n        })\n        .catch(err => {\n            console.error(\"Erreur lors de l'envoi :\", err);\n            alert(\"Une erreur s'est produite lors de l'envoi du message.\");\n        });        \n    }   \n\n     //fonction handle: Récupération des données entrées par l'utilisateur\n    function handle(e){\n        const newdata={...data }\n        newdata[e.target.id] = e.target.value\n        setData(newdata)\n        \n    }\n\n\n    return (\n        <>\n            <div class=\"contacth1\">\n                <h1>Besoin d'un renseignement?  <br></br> Contactez-nous! </h1>\n            </div>\n            <div >\n                <form onSubmit={(e)=> submit(e)} >\n                    <Form.Group className=\"pb-5\">\n                        <Form.Label className=\"label\">Nom</Form.Label>\n                        <Form.Control  className=\"field\" onChange={(e)=>handle(e)} id=\"lastname\" name=\"lastname\" value={data.lastname} type=\"text\" maxLength={50} required></Form.Control>\n\n                        <Form.Label className=\"label\">Prénom</Form.Label>\n                        <Form.Control className=\"field\" onChange={(e)=>handle(e)} id=\"firstname\" name=\"firstname\" value={data.firstname} type=\"text\" maxLength={50} required></Form.Control>\n\n                        <Form.Label className=\"label\">email</Form.Label>\n                        <Form.Control className=\"field\" onChange={(e)=>handle(e)} id=\"email\" name=\"email\" value={data.email} type=\"email\" maxLength={50} required></Form.Control>\n                       \n                        <Form.Label className=\"label\">Message</Form.Label>\n                        <Form.Control className=\"field\" onChange={(e)=>handle(e)} id=\"message\" name=\"message\" value={data.message} as=\"textarea\" rows={5} maxLength={500} required></Form.Control>\n                        <div>\n                            <Form.Check className=\"checkRGPD \" label={\"En cochant cette case, je consens au traitement de mes données personnelles afin de permettre à LiveEvents de me répondre de la manière la plus pertinente et ce, conformément à la politique de confidentialité dont j’ai pris connaissance et que j’accepte sans réserve.\" } id={`checkBox`} required></Form.Check>\n                        </div>\n                        \n                        <Link to=\"/LiveEvents/Confidential\" >\n                            <Button className=\"checkRGPDLink\" variant=\"link\" >Lire la politique de confidentialité</Button>\n                        </Link>\n                        \n\n                        <div >\n                            <ReCAPTCHA\n                                sitekey=\"6LfQ-NwqAAAAAPQ7zlhsVFa-88bdAJT7v0QwOWsy\"\n                                onChange={setValue}                                \n                            />\n                        </div>\n\n                        <div class=\"submitbutton \">\n                            <Button variant=\"secondary\" size=\"lg\" className=\"boutonSubmit\" type='submit' disabled={!value} >\n                                Envoyer\n                            </Button>\n                        </div>                  \n                    </Form.Group>\n                </form>\n            </div>\n            </>\n    )\n    \n}\nexport default FormContact;","import React from 'react';\nimport FormContact from \"../Components/FormContact\"\n\n\nfunction Contact() {\n  \n  return (\n    <div class=\"contact\">\n      <FormContact />\n    </div>\n  );\n}\nexport default Contact;"],"names":["navigate","useNavigate","data","setData","useState","lastname","firstname","email","message","value","setValue","handle","e","newdata","_objectSpread","target","id","_jsxs","_Fragment","children","_jsx","class","onSubmit","preventDefault","Axios","post","concat","process","headers","then","res","console","log","catch","err","error","alert","submit","Form","Group","className","Label","Control","onChange","name","type","maxLength","required","as","rows","Check","label","Link","to","Button","variant","ReCAPTCHA","sitekey","size","disabled","FormContact"],"sourceRoot":""}