{"version":3,"file":"static/js/809.1e497001.chunk.js","mappings":"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","sources":["Components/ScrollToTopButton.jsx","Components/ConcertHomePage.jsx","Components/BannerAlert.jsx","Pages/Home.jsx"],"sourcesContent":["\nfunction ScrollToTopButton() {\n \n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div className={`scroll-to-top-button `}>\n      <button onClick={scrollToTop} ><div className=\"HautDePage\"><img src={`${process.env.PUBLIC_URL}/assets/fleches-vers-le-haut.png`} id=\"fleche\" alt=\"flêche\" width={32} height={32}/></div><p className=\"HautDePage\">Haut de page</p></button>\n    </div>\n  );\n\n}\nexport default ScrollToTopButton;","import { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\nexport const apiURL = process.env.REACT_APP_API_URL;\n\n/*Function permettant l'affichage des premiers concerts du festival D1S1=Day1 Schedule1*/\n\nexport default function ConcertHomePage() {\n\n  \n  \n  /*concerts est initialement vide*/\n  const [concerts, setConcerts] = useState([])\n\n  const [errorMessage, setErrorMessage] = useState(null); //message d'erreur \n\n  const { customer, isAuthenticated } = useContext(AuthContext);\n  \n/*envoi une requête et récupération des données dans 'dataConcerts.json' puis les stockent dans concerts avec setConcerts*/\n  /*utilisation requêtes asynchrones*/\n    useEffect(()=>{\n       // création d'un controller d'annulation\n      const controller = new AbortController();      \n\n      const apiCallConcerts = async () => {\n\n        try {\n          const apiCallPromise = await fetch(`${apiURL}/api/concerts`, {\n            signal: controller.signal,\n          });\n\n          if (!apiCallPromise.ok) throw new Error(\"Pas de réponse réseau\");\n          const apiCallObj = await apiCallPromise.json();\n          setConcerts(apiCallObj);\n        }catch (error) {\n          if (error.name === 'AbortError') {\n           //Requête annulée (pas grave)\n           return;\n            }\n             // Message pour l'utilisateur\n            setErrorMessage(\"Impossible de charger la liste des concerts. Veuillez réessayer plus tard.\");\n          }          \n        };   \n        apiCallConcerts();  \n          // Nettoyage quand le composant se démonte :  \n          return () => { controller.abort();    \n        };             \n      }, []);\n     \n\n  /*on met dans Val les concerts ayant la date et l'horaire  */\n  const day1sch1 = concerts.filter(Val =>\n  /* condition: pas connecté ou connecté */\n  isAuthenticated() ? \n    Val.style === (customer?.style || (Val.day === \"09/07/2027\" && Val.schedule === \"18:00 - 19:00\") )     \n   :    \n    Val.day === \"09/07/2027\" && Val.schedule === \"18:00 - 19:00\"\n  );\n\n/*on liste le contenu de Val , affichage dans des cards*/\n\n  const listDay1Sch1 = day1sch1.map(Val => {\n    \n      return (\n        <li key={Val.id} className=\"listCard mt-2\">\n        <div className=\"card cardh\" >\n          <div className=\"row g-0\">\n            <div className=\"col-md-4 \">\n              <img             \n                src={Val.fullImageUrl}   \n                width=\"100\" \n                height=\"56\"  \n                className=\"img-fluid rounded\" \n                alt={Val.name} \n                fetchPriority=\"high\"\n                loading=\"eager\"\n                decoding=\"async\"\n                style={{ aspectRatio: \"16 / 9\", objectFit: \"cover\", display: \"block\", backgroundColor: \"var(--gris)\" }}\n                />\n            </div>\n            <div className=\"col-md-8 \">\n              <div className=\"card-body\">\n                <h1 className=\"card-title\">{Val.name}</h1>\n                <p className=\"card-text\">{Val.schedule}</p>\n                <p className=\"card-text\"><small className=\"text-body-secondary \">{Val.location}</small></p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>     \n    );\n  }\n);\n\n\n /*Affichage de la liste + lien vers Programmation */\n\nreturn ( \n  <div className='row  g-0 '>\n    <div className=\"pb-0 mt-8 \" data-testid=\"concertHome\">  \n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}  \n\n      {concerts.length === 0 ? (\n        // placeholder pour réserver la place des données avant le fetch (optimisation performance)\n        // affichage de 3 cartes \"squelette\" pendant le chargement représentant les concerts\n        <ul className=\"concertList\">\n    {[...Array(3)].map((_, i) => (\n      <li key={i} className=\"listCard mt-2\">\n        <div className=\"card cardh skeleton-card\">\n          <div className=\"row g-0\">\n            <div className=\"col-md-4\">\n              <div className=\"skeleton-img\"></div>\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"skeleton-text\">\n                <div className=\"skeleton-line title\"></div>\n                <div className=\"skeleton-line\"></div>\n                <div className=\"skeleton-line short\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>\n    ))}\n  </ul>\n      ) : (\n        <ul className=\"concertList\">{listDay1Sch1}</ul>\n      )}\n    </div>\n  </div>\n)\n}","import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { Carousel } from \"flowbite-react\";\n\nexport const apiURL = process.env.REACT_APP_API_URL;\n\n\nexport default function BannerAlert() {\n\n   /*alerts est initialement vide*/\n  const [alerts, setAlerts] = useState([])\n\n  const [visible, setVisible] = useState(false)\n\n\n\n\n\n     /*envoi une requête et récupération des données dans la base de données puis les stockent dans alerts avec setAlertss*/\n  useEffect(()=>{\n     // création d'un controller d'annulation\n      const controller = new AbortController();\n      \n      const apiCallAlerts = async () => {\n        try {\n          const apiCallPromise = await fetch(`${apiURL}/api/alerts`, {\n                signal: controller.signal,\n              });\n          const apiCallObj = await  apiCallPromise.json();\n        setAlerts(apiCallObj)\n        }catch (error) {\n        if (error.name === 'AbortError') {\n          console.error(\"Requête des datas d'Alert annulée\");\n        } else {\n          console.error(\"Erreur lors de la requête Alert:\", error);\n        }\n      }\n    };         \n    apiCallAlerts();\n    setVisible(true)\n  }, []);\n\n\n\n\n\n/* Création du caroussel et map des données*/\n\n  const listAlert = alerts.map(Val =>\n    \n   \n    <div className=\"h-20 sm:h-20 xl:h-20 2xl:h-20\" >\n      \n      <Carousel   slide={false}>\n        \n        <div className=\"flex h-full items-top justify-center bg-red-600 dark:bg-gray-700 dark:text-white text-yellow-200 text-2xl animate-pulse\">\n          {Val.message1}\n        </div>\n        \n        <div className=\"flex h-full items-top justify-center bg-amber-400 dark:bg-gray-700 dark:text-white text-red-600 text-2xl animate-pulse\">\n          {Val.message2}\n        </div>  \n        \n      </Carousel>\n\n      </div>\n   \n    \n         \n  )\n  if (visible) {\n  return (\n      <>\n   \n      {listAlert}\n      \n      </>\n  \n  )\n}\n  \n}\n\n","import ConcertHomePage from \"../Components/ConcertHomePage.jsx\"\nimport BannerAlert from \"../Components/BannerAlert.jsx\"\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"flowbite-react\";\nimport {  HiShoppingCart } from \"react-icons/hi\";\nimport ScrollToTopButton from \"../Components/ScrollToTopButton.jsx\";\nimport { lazy, Suspense, useContext } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n//pour améliorer les performances, chargement lazy de la googlemap\nconst GoogleMap = lazy(() => import(\"../Components/GoogleMap.tsx\"));\n\nfunction Home() {\n\n   const { customer,isAuthenticated } = useContext(AuthContext);\n/*Fonction du bouton Billetterie */\n    function Billet() {   \n        return ( \n              \n          <div className=\"row mb-20 mt-20\" >\n            <div className=\"boutonBilletHome \">\n            <Link to=\"/Billetterie\">\n              <Button size=\"xl\" gradientDuoTone=\"redToYellow\" >\n                <HiShoppingCart className=\"mr-2 h-10 w-10\" />\n                  Billetterie\n              </Button>             \n            </Link>\n            </div>\n          </div>\n      \n            )\n      }\n\n    return ( \n        <>\n       \n      <div className=\"background \" style={{overflow: \"hidden\"}}>\n        <div className=\"row\">\n          <BannerAlert /> \n          </div>\n          \n        <div className=\"row\">\n          {isAuthenticated() ? (\n            <>\n              <h1 className=\"titleUser pt-3\">Bonjour {customer?.firstname  || \"\"} {customer?.lastname || \"\"}</h1><h2> les concerts suivants devraient vous convenir:</h2>\n            </>\n          ) : (\n          <h1 className=\"title pt-3\">NATION SOUNDS</h1>\n        \n          )}\n          </div>\n        \n          <Link to=\"/Programmation\">\n          <div className=\"ConcertHomePage \" width={100} height={200} >\n            <ConcertHomePage />\n          </div>\n          </Link>\n         \n\n          <Billet />\n\n\n\n          <Link to=\"/Plan\">\n            <Suspense fallback={<div className=\"loading-map\">Chargement de la carte...</div>}>\n              <div className=\"d-none d-lg-block GmapMini  col-8 offset-2  \">\n                <GoogleMap />\n              </div>\n\n              <div className=\"d-block d-lg-none GmapMiniSmall  col-10 offset-1  \">\n                <GoogleMap />              \n              </div>\n            </Suspense>            \n          </Link>  \n\n        </div>\n        <div className=\"marginMap\">\n        <ScrollToTopButton/>\n        </div>\n        </>\n              \n                \n      \n\n      \n      )\n\n}\n\nexport default Home;"],"names":["_jsx","className","children","_jsxs","onClick","scrollToTop","window","scrollTo","top","behavior","src","concat","process","id","alt","width","height","ConcertHomePage","concerts","setConcerts","useState","errorMessage","setErrorMessage","customer","isAuthenticated","useContext","AuthContext","useEffect","controller","AbortController","async","apiCallPromise","fetch","signal","ok","Error","apiCallObj","json","error","name","apiCallConcerts","abort","listDay1Sch1","filter","Val","style","day","schedule","map","fullImageUrl","fetchPriority","loading","decoding","aspectRatio","objectFit","display","backgroundColor","location","color","length","Array","_","i","BannerAlert","alerts","setAlerts","visible","setVisible","console","apiCallAlerts","listAlert","Carousel","slide","message1","message2","_Fragment","GoogleMap","lazy","Billet","Link","to","Button","size","gradientDuoTone","HiShoppingCart","overflow","firstname","lastname","Suspense","fallback","ScrollToTopButton"],"sourceRoot":""}