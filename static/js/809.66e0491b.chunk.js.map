{"version":3,"file":"static/js/809.66e0491b.chunk.js","mappings":"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","sources":["Components/GoogleMap.tsx","Components/ScrollToTopButton.jsx","Components/ConcertHomePage.jsx","Components/BannerAlert.jsx","Pages/Home.jsx"],"sourcesContent":["import React, {useCallback, useState, useEffect} from 'react';\nimport {\n  AdvancedMarker,\n  AdvancedMarkerProps,\n  APIProvider,\n  InfoWindow,\n  Map,  \n  useAdvancedMarkerRef,\n  AdvancedMarkerAnchorPoint\n} from '@vis.gl/react-google-maps';\nimport { Link } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\n\n\n//Type de l'apiKey en string (ne pas oublier le point d'exclamation final)\nexport const apiKey : string = process.env.REACT_APP_GOOGLE_MAP!;\nexport const apiURL : string = process.env.REACT_APP_API_URL!;\n\nconst GoogleMap = () => {\n  \n  //Récupération des données par l'API en utilisant une promesse\n  useEffect( ()=>{\n    const controller = new AbortController();\n\n    const apiCallMarkers = async () => {\n      try {\n        const apiCallPromise = await fetch(`${apiURL}/api/markers`,     \n          {\n            signal: controller.signal,\n          }\n        );\n        if (!apiCallPromise.ok) \n          throw new Error(\"Pas de connexion réseau\");\n\n        const apiCallObj = await apiCallPromise.json();\n        setMarkerData(apiCallObj);     \n      } catch (error) {\n        if (error instanceof Error) {    // pour typescript\n          if (error.name=== 'AbortError') {\n          // Requête annulée\n          return;\n          }\n          setErrorMessage(\"Impossible de charger les POI. Veuillez réessayer plus tard.\");\n        }       \n      }\n    };\n     apiCallMarkers();   \n      return () => { controller.abort();    \n        };  \n  }, []);\n\n   \nconst [markerData, setMarkerData] = useState([]);  \nconst [selectedId, setSelectedId] = useState<string | null>(null);\nconst [selectedType, setSelectedType] = useState<string | null>(null);\nconst [selectedDetails, setSelectedDetails] = useState<string | null>(null);\nconst [selectedName, setSelectedName] = useState<string | null>(null); \nconst [selectedMarker, setSelectedMarker] =\n  useState<google.maps.marker.AdvancedMarkerElement | null>(null);\nconst [infoWindowShown, setInfoWindowShown] = useState(false);\nconst [showLinks, setShowLinks] = useState(false); \nconst [errorMessage, setErrorMessage] = useState<string | null>(null); // état pour l'erreur du fetch\n\n//Lors du click sur le marker, sélection de l'id, des détails et du nom du marker nécessaire à l'affichage de l'infowindow\nconst onMarkerClick = useCallback(\n  (name: string | null, details: string | null, id: string | null, type: string,  marker ?: google.maps.marker.AdvancedMarkerElement) => {\n    setSelectedId(id);\n    setSelectedDetails(details);\n    setSelectedName(name);\n    setSelectedType(type);\n    \n    if (marker) {\n      setSelectedMarker(marker);       \n    }\n    if (id !== selectedId) {        \n      setInfoWindowShown(true);\n    } else {\n      setInfoWindowShown(isShown => !isShown);\n    }\n  },\n  [selectedId]   \n);\n//Lors d'un click sur la map (autre que sur un marker), vidage des variables , fermeture de l'infowindow\nconst onMapClick = useCallback(() => {\n  setSelectedId(null);\n  setSelectedMarker(null);\n  setInfoWindowShown(false);\n  setSelectedType(null);\n  setSelectedDetails(null);\n  setSelectedName(null);\n}, []);\n//Fermeture de l'infowindow lorsqu'on click sur la croix de fermeture\nconst handleInfowindowCloseClick = useCallback(\n  () => setInfoWindowShown(false),\n  []\n);\n//Variables et fonctions pour les checkbox du menu\nconst [sceneChecked, setSceneChecked] =React.useState(true);\nconst handleChangeScene = () => {setSceneChecked(!sceneChecked)};\n\nconst [barChecked, setBarChecked] =React.useState(true);\nconst handleChangeBar = () => {setBarChecked(!barChecked)};\n\nconst [parkChecked, setParkChecked] =React.useState(true);\nconst handleChangePark = () => {setParkChecked(!parkChecked)};\n\nconst [exitChecked, setExitChecked] =React.useState(true);\nconst handleChangeExit = () => {setExitChecked(!exitChecked)};\n\nconst [shopChecked, setShopChecked] =React.useState(true);\nconst handleChangeShop = () => {setShopChecked(!shopChecked)};\n\nconst [wcChecked, setWcChecked] =React.useState(true);\nconst handleChangeWc = () => {setWcChecked(!wcChecked)};\n\nconst [campChecked, setCampChecked] =React.useState(true);\nconst handleChangeCamp = () => {setCampChecked(!campChecked)};\n\nconst handleShowLinks = () => {\n  setShowLinks(!showLinks);    \n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  return (   \n    <APIProvider apiKey= {apiKey} libraries={['marker']}>\n      <>\n      <div className='backgroundMap' style={{overflow: \"hidden\"}}>        \n                                 \n        <div className=\"btn-group BurgerSituationMap\" data-toggle=\"buttons-checkbox\">                                  \n          <button type=\"button\" className=\"BurgerProg btn btn-default \" onClick={handleShowLinks}>                        \n            <img src={`${process.env.PUBLIC_URL}/assets/parametres-curseurs.png`} alt='burger' ></img>                        \n          </button>                    \n        </div>      \n        \n        {/* Affichage des checkbox du menu  */}\n            \n      <div className='Gmap'>                                   \n        <div className={`  ${showLinks ? \"d-block\" : \"d-none\"} `}>  \n          <div className='d-none d-lg-block'>\n            <div className='ico'> \n              <input type=\"checkbox\" checked={sceneChecked} onChange={handleChangeScene}/>\n              <img src={`${process.env.PUBLIC_URL}/assets/POI/scene.png`} width=\"35em\" height= \"35em\" alt=\"Scène\"/>\n              <input type=\"checkbox\" checked={barChecked} onChange={handleChangeBar}/>\n              <img src={`${process.env.PUBLIC_URL}/assets/POI/cocktail2.png`} width=\"35em\" height= \"35em\" alt=\"bar\"/>\n              <input type=\"checkbox\" checked={parkChecked} onChange={handleChangePark}/>\n              <img src={`${process.env.PUBLIC_URL}/assets/POI/parking.png`} width=\"35em\" height= \"35em\" alt=\"parking\"/>\n              <input type=\"checkbox\" checked={exitChecked} onChange={handleChangeExit}/>\n              <img src={`${process.env.PUBLIC_URL}/assets/POI/entrer.png`} width=\"35em\" height= \"35em\" alt=\"exit\"/>\n              <input type=\"checkbox\" checked={shopChecked} onChange={handleChangeShop}/>\n              <img src={`${process.env.PUBLIC_URL}/assets/POI/boutique.png`} width=\"35em\" height= \"35em\" alt=\"shop\"/>\n              <input type=\"checkbox\" checked={wcChecked} onChange={handleChangeWc}/>\n              <img src={`${process.env.PUBLIC_URL}/assets/POI/toilettes.png`} width=\"35em\" height= \"35em\" alt=\"wc\"/>\n              <input type=\"checkbox\" checked={campChecked} onChange={handleChangeCamp}/>\n              <img src={`${process.env.PUBLIC_URL}/assets/POI/camping.png`} width=\"35em\" height= \"35em\" alt=\"camping\"/>\n            </div>\n          </div> \n          <div className='d-block d-lg-none'>\n            <div > \n              <div className='icoMobile'>\n                <input type=\"checkbox\" checked={sceneChecked} onChange={handleChangeScene}/>\n                <img src={`${process.env.PUBLIC_URL}/assets/POI/scene.png`} width=\"35em\" height= \"35em\" alt=\"Scène\"/>\n                <input type=\"checkbox\" checked={barChecked} onChange={handleChangeBar}/>\n                <img src={`${process.env.PUBLIC_URL}/assets/POI/cocktail2.png`} width=\"35em\" height= \"35em\" alt=\"bar\"/>\n                </div>\n                <div className='icoMobile'>\n                <input type=\"checkbox\" checked={parkChecked} onChange={handleChangePark}/>\n                <img src={`${process.env.PUBLIC_URL}/assets/POI/parking.png`} width=\"35em\" height= \"35em\" alt=\"parking\"/>   \n                <input type=\"checkbox\" checked={exitChecked} onChange={handleChangeExit}/>\n                <img src={`${process.env.PUBLIC_URL}/assets/POI/entrer.png`} width=\"35em\" height= \"35em\" alt=\"exit\"/>\n                </div>\n                <div className='icoMobile'>\n                <input type=\"checkbox\" checked={shopChecked} onChange={handleChangeShop}/>\n                <img src={`${process.env.PUBLIC_URL}/assets/POI/boutique.png`} width=\"35em\" height= \"35em\" alt=\"shop\"/>\n                <input type=\"checkbox\" checked={wcChecked} onChange={handleChangeWc}/>\n                <img src={`${process.env.PUBLIC_URL}/assets/POI/toilettes.png`} width=\"35em\" height= \"35em\" alt=\"wc\"/>\n                <input type=\"checkbox\" checked={campChecked} onChange={handleChangeCamp}/>\n                <img src={`${process.env.PUBLIC_URL}/assets/POI/camping.png`} width=\"35em\" height= \"35em\" alt=\"camping\"/>\n              </div>\n            </div>\n          </div>\n        </div>   \n\n        { /* Affichage de l'erreur du fetch si nécessaire */}\n        {errorMessage && (\n          <div style={{ color: \"red\", textAlign: \"center\", margin: \"1em\" }}>\n            {errorMessage}\n          </div>\n        )}\n\n        {/* Affichage de la Map */}\n      <Map\n        mapId=\"d17a67bf932afd78\"\n        maxZoom={20}\n        minZoom={10}\n        defaultZoom={15.477}\n        defaultCenter={{lat: 48.64627130950389,    lng: 1.8125529133067797}}\n        gestureHandling={'auto'}\n        onClick={onMapClick}\n        clickableIcons={false}\n        disableDefaultUI>\n\n            \n       \n        {markerData.map(({id, latitude, longitude, type, zIndex, details, name}) => {  \n                 \n          // Affichage des icones avec condition de \"type\" et de la checkbox activée  \n          if (type === \"scene\" && sceneChecked )            \n            return (              \n              <React.Fragment >                          \n                <AdvancedMarkerWithRef                  \n                  onMarkerClick={(\n                    marker: google.maps.marker.AdvancedMarkerElement\n                  ) => onMarkerClick(name,details,id,type, marker)}                        \n                  position={{lat: parseFloat( latitude ),lng: parseFloat( longitude )}}\n                  anchorPoint={AdvancedMarkerAnchorPoint['CENTER']}\n                  zIndex={zIndex}>\n                  <img src={`${process.env.PUBLIC_URL}/assets/POI/scene.png`} width={45} height={45} alt=\"scene\"/>                                     \n                </AdvancedMarkerWithRef>\n              </React.Fragment>\n            );\n          \n\n          if (type === 'bar' && barChecked) \n            return (                  \n              <React.Fragment >                 \n                <AdvancedMarkerWithRef\n                  onMarkerClick={(\n                    marker: google.maps.marker.AdvancedMarkerElement\n                  ) => onMarkerClick(name,details,id,type, marker)}                        \n                  position={{lat: parseFloat( latitude ),lng: parseFloat( longitude )}}\n                  anchorPoint={AdvancedMarkerAnchorPoint['CENTER']}\n                  zIndex={zIndex}>\n                  <img src={`${process.env.PUBLIC_URL}/assets/POI/cocktail2.png`} width={40} height={40} alt=\"bar\"/>                  \n                </AdvancedMarkerWithRef>\n              </React.Fragment>\n            );\n          \n\n          if (type === 'parking' && parkChecked) \n            return (                  \n              <React.Fragment >                 \n                <AdvancedMarkerWithRef\n                  onMarkerClick={(\n                    marker: google.maps.marker.AdvancedMarkerElement\n                  ) => onMarkerClick(name,details,id,type, marker)}                        \n                  position={{lat: parseFloat( latitude ),lng: parseFloat( longitude )}}\n                  anchorPoint={AdvancedMarkerAnchorPoint['CENTER']}\n                  zIndex={zIndex}>\n                  <img src={`${process.env.PUBLIC_URL}/assets/POI/parking.png`} width={30} height={30} alt=\"parking\"/>                  \n                </AdvancedMarkerWithRef>\n              </React.Fragment>\n            );\n          \n\n          if (type === 'door' && exitChecked) \n            return (                  \n              <React.Fragment >                 \n                <AdvancedMarkerWithRef\n                  onMarkerClick={(\n                    marker: google.maps.marker.AdvancedMarkerElement\n                  ) => onMarkerClick(name,details,id,type, marker)}                        \n                  position={{lat: parseFloat( latitude ),lng: parseFloat( longitude )}}\n                  anchorPoint={AdvancedMarkerAnchorPoint['CENTER']}\n                  zIndex={zIndex}>\n                  <img src={`${process.env.PUBLIC_URL}/assets/POI/entrer.png`} width={30} height={30} alt=\"exit\"/>                  \n                </AdvancedMarkerWithRef>\n              </React.Fragment>\n            );\n          \n\n          if (type === 'shop' && shopChecked) \n            return (                  \n              <React.Fragment >                 \n                <AdvancedMarkerWithRef\n                  onMarkerClick={(\n                    marker: google.maps.marker.AdvancedMarkerElement\n                  ) => onMarkerClick(name,details,id,type, marker)}                        \n                  position={{lat: parseFloat( latitude ),lng: parseFloat( longitude )}}\n                  anchorPoint={AdvancedMarkerAnchorPoint['CENTER']}\n                  zIndex={zIndex}>\n                  <img src={`${process.env.PUBLIC_URL}/assets/POI/boutique.png`} width={30} height={30} alt=\"shop\"/>                  \n                </AdvancedMarkerWithRef>\n              </React.Fragment>\n            );\n          \n\n          if (type === 'wc' && wcChecked) \n            return (                  \n              <React.Fragment >                 \n                <AdvancedMarkerWithRef\n                  onMarkerClick={(\n                    marker: google.maps.marker.AdvancedMarkerElement\n                  ) => onMarkerClick(name,details,id,type, marker)}                        \n                  position={{lat: parseFloat( latitude ),lng: parseFloat( longitude )}}\n                  anchorPoint={AdvancedMarkerAnchorPoint['CENTER']}\n                  zIndex={zIndex}>\n                  <img src={`${process.env.PUBLIC_URL}/assets/POI/toilettes.png`} width={30} height={30} alt=\"wc\"/>                  \n                </AdvancedMarkerWithRef>\n              </React.Fragment>\n            );\n          \n\n          if (type === 'camping' && campChecked) \n            return (                  \n              <React.Fragment >                 \n                <AdvancedMarkerWithRef\n                  onMarkerClick={(\n                    marker: google.maps.marker.AdvancedMarkerElement\n                  ) => onMarkerClick(name,details,id,type, marker)}                        \n                  position={{lat: parseFloat( latitude ),lng: parseFloat( longitude )}}\n                  anchorPoint={AdvancedMarkerAnchorPoint['CENTER']}\n                  zIndex={zIndex}>\n                  <img src={`${process.env.PUBLIC_URL}/assets/POI/camping.png`} width={30} height={30} alt=\"wc\"/>                  \n                </AdvancedMarkerWithRef>\n              </React.Fragment>\n            );\n            \n          return (null)\n           \n        }\n        )}\n          \n         {/* condition d'affichage et contenu de l'infowindow  */}\n\n         {infoWindowShown && selectedMarker && selectedType === \"scene\" && (\n         \n          <InfoWindow          \n            anchor={selectedMarker}\n            pixelOffset={[0, 0]}\n            onCloseClick={handleInfowindowCloseClick}>\n            <h4>{selectedName}</h4>\n            <p>{selectedDetails}</p>  \n            <Link to= \"/Programmation\">            \n              <Button className=\"checkRGPDLink\" variant=\"link\">Voir le programme</Button>\n            </Link>   \n          </InfoWindow>\n          )}\n        \n        {infoWindowShown && selectedMarker  && (selectedType === \"camping\" || selectedType === \"parking\" || selectedType === \"door\" ) && (\n         \n          <InfoWindow          \n            anchor={selectedMarker}\n            pixelOffset={[0, 0]}\n            onCloseClick={handleInfowindowCloseClick}>\n            <h4>{selectedName}</h4>\n            <p>{selectedDetails}</p>   \n              <Link to=\"/Informations\">                  \n                <Button className=\"checkRGPDLink\" variant=\"link\">&lsaquo;&lsaquo;Infos&rsaquo;&rsaquo;</Button>\n              </Link>        \n          </InfoWindow>\n          )}\n          \n         {infoWindowShown && selectedMarker  && (selectedType === \"bar\" || selectedType === \"wc\" || selectedType === \"shop\" ) && (\n         \n          <InfoWindow          \n            anchor={selectedMarker}\n            pixelOffset={[0, 0]}\n            onCloseClick={handleInfowindowCloseClick}>\n            <h4>{selectedName}</h4>\n            <p>{selectedDetails}</p>                      \n          </InfoWindow>\n          )}\n        \n      </Map>\n    </div>        \n  </div>\n  </>      \n  </APIProvider>    \n  );  \n};\n\n// Définition du marker \nexport const AdvancedMarkerWithRef = (\n  props: AdvancedMarkerProps & {\n    onMarkerClick: (marker: google.maps.marker.AdvancedMarkerElement) => void;\n  }\n) => {\nconst {children, onMarkerClick, ...advancedMarkerProps} = props;\nconst [markerRef, marker] = useAdvancedMarkerRef();\n\nreturn (\n  <AdvancedMarker\n    onClick={() => {\n      if (marker) {\n        onMarkerClick(marker);\n      }\n    }}\n    ref={markerRef}\n    {...advancedMarkerProps}>\n    {children}\n  </AdvancedMarker>\n  );\n};\n\nexport default GoogleMap;\n\n","\nfunction ScrollToTopButton() {\n \n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div className={`scroll-to-top-button `}>\n      <button onClick={scrollToTop} ><div className=\"HautDePage\"><img src={`${process.env.PUBLIC_URL}/assets/fleches-vers-le-haut.png`} id=\"fleche\" alt=\"flêche\" width={32} height={32}/></div><p className=\"HautDePage\">Haut de page</p></button>\n    </div>\n  );\n\n}\nexport default ScrollToTopButton;","import { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\nexport const apiURL = process.env.REACT_APP_API_URL;\n\n/*Function permettant l'affichage des premiers concerts du festival D1S1=Day1 Schedule1*/\n\nexport default function ConcertHomePage() {\n\n  \n  \n  /*concerts est initialement vide*/\n  const [concerts, setConcerts] = useState([])\n\n  const [errorMessage, setErrorMessage] = useState(null); //message d'erreur \n\n  const { customer, isAuthenticated } = useContext(AuthContext);\n  \n/*envoi une requête et récupération des données dans 'dataConcerts.json' puis les stockent dans concerts avec setConcerts*/\n  /*utilisation requêtes asynchrones*/\n    useEffect(()=>{\n       // création d'un controller d'annulation\n      const controller = new AbortController();\n\n       // Suppression de l'image placeholder du HTML initial quand React démarre\n      const preloadHero = document.getElementById('preload-hero');\n      if (preloadHero) preloadHero.remove();\n\n      const apiCallConcerts = async () => {\n\n        try {\n          const apiCallPromise = await fetch(`${apiURL}/api/concerts`, {\n            signal: controller.signal,\n          });\n\n          if (!apiCallPromise.ok) throw new Error(\"Pas de réponse réseau\");\n          const apiCallObj = await apiCallPromise.json();\n          setConcerts(apiCallObj);\n        }catch (error) {\n          if (error.name === 'AbortError') {\n           //Requête annulée (pas grave)\n           return;\n            }\n             // Message pour l'utilisateur\n            setErrorMessage(\"Impossible de charger la liste des concerts. Veuillez réessayer plus tard.\");\n          }          \n        };   \n        apiCallConcerts();  \n          // Nettoyage quand le composant se démonte :  \n          return () => { controller.abort();    \n        };             \n      }, []);\n     \n\n  /*on met dans Val les concerts ayant la date et l'horaire  */\n  const day1sch1 = concerts.filter(Val =>\n  /* condition: pas connecté ou connecté */\n  isAuthenticated() ? \n    Val.style === (customer?.style || (Val.day === \"09/07/2027\" && Val.schedule === \"18:00 - 19:00\") )     \n   :    \n    Val.day === \"09/07/2027\" && Val.schedule === \"18:00 - 19:00\"\n  );\n\n/*on liste le contenu de Val , affichage dans des cards*/\n\n  const listDay1Sch1 = day1sch1.map(Val => {\n    \n      return (\n        <li key={Val.id} className=\"listCard mt-2\">\n        <div className=\"card cardh\" >\n          <div className=\"row g-0\">\n            <div className=\"col-md-4 \">\n              <img             \n                src={Val.fullImageUrl}   \n                width=\"1600\" \n                height=\"900\"  \n                className=\"img-fluid rounded\" \n                alt={Val.name} \n                fetchPriority=\"high\"\n                loading=\"eager\"\n                decoding=\"async\"\n                style={{ aspectRatio: \"16 / 9\", objectFit: \"cover\", display: \"block\", backgroundColor: \"var(--gris)\" }}\n                />\n            </div>\n            <div className=\"col-md-8 \">\n              <div className=\"card-body\">\n                <h1 className=\"card-title\">{Val.name}</h1>\n                <p className=\"card-text\">{Val.schedule}</p>\n                <p className=\"card-text\"><small className=\"text-body-secondary \">{Val.location}</small></p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>     \n    );\n  }\n);\n\n\n /*Affichage de la liste + lien vers Programmation */\n\nreturn ( \n  <div className='row  g-0 '>\n    <div className=\"pb-0 mt-8 \" data-testid=\"concertHome\">  \n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}  \n\n      {concerts.length === 0 ? (\n        // placeholder pour réserver la place des données avant le fetch (optimisation performance)\n        // affichage de 3 cartes \"squelette\" pendant le chargement représentant les concerts\n        <ul className=\"concertList\">\n    {[...Array(3)].map((_, i) => (\n      <li key={i} className=\"listCard mt-2\">\n        <div className=\"card cardh skeleton-card\">\n          <div className=\"row g-0\">\n            <div className=\"col-md-4\">\n              <div className=\"skeleton-img\"></div>\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"skeleton-text\">\n                <div className=\"skeleton-line title\"></div>\n                <div className=\"skeleton-line\"></div>\n                <div className=\"skeleton-line short\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>\n    ))}\n  </ul>\n      ) : (\n        <ul className=\"concertList\">{listDay1Sch1}</ul>\n      )}\n    </div>\n  </div>\n)\n}","import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { Carousel } from \"flowbite-react\";\n\nexport const apiURL = process.env.REACT_APP_API_URL;\n\n\nexport default function BannerAlert() {\n\n   /*alerts est initialement vide*/\n  const [alerts, setAlerts] = useState([])\n\n  const [visible, setVisible] = useState(false)\n\n\n\n\n\n     /*envoi une requête et récupération des données dans la base de données puis les stockent dans alerts avec setAlertss*/\n  useEffect(()=>{\n     // création d'un controller d'annulation\n      const controller = new AbortController();\n      \n      const apiCallAlerts = async () => {\n        try {\n          const apiCallPromise = await fetch(`${apiURL}/api/alerts`, {\n                signal: controller.signal,\n              });\n          const apiCallObj = await  apiCallPromise.json();\n        setAlerts(apiCallObj)\n        }catch (error) {\n        if (error.name === 'AbortError') {\n          console.error(\"Requête des datas d'Alert annulée\");\n        } else {\n          console.error(\"Erreur lors de la requête Alert:\", error);\n        }\n      }\n    };         \n    apiCallAlerts();\n    setVisible(true)\n  }, []);\n\n\n\n\n\n/* Création du caroussel et map des données*/\n\n  const listAlert = alerts.map(Val =>\n    \n   \n    <div className=\"h-20 sm:h-20 xl:h-20 2xl:h-20\" >\n      \n      <Carousel   slide={false}>\n        \n        <div className=\"flex h-full items-top justify-center bg-red-600 dark:bg-gray-700 dark:text-white text-yellow-200 text-2xl animate-pulse\">\n          {Val.message1}\n        </div>\n        \n        <div className=\"flex h-full items-top justify-center bg-amber-400 dark:bg-gray-700 dark:text-white text-red-600 text-2xl animate-pulse\">\n          {Val.message2}\n        </div>  \n        \n      </Carousel>\n\n      </div>\n   \n    \n         \n  )\n  if (visible) {\n  return (\n      <>\n   \n      {listAlert}\n      \n      </>\n  \n  )\n}\n  \n}\n\n","import ConcertHomePage from \"../Components/ConcertHomePage.jsx\"\nimport GoogleMap from \"../Components/GoogleMap.tsx\"\nimport BannerAlert from \"../Components/BannerAlert.jsx\"\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"flowbite-react\";\nimport {  HiShoppingCart } from \"react-icons/hi\";\nimport ScrollToTopButton from \"../Components/ScrollToTopButton.jsx\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n\n\nfunction Home() {\n\n   const { customer,isAuthenticated } = useContext(AuthContext);\n/*Fonction du bouton Billetterie */\n    function Billet() {   \n        return ( \n              \n          <div className=\"row mb-20 mt-20\" >\n            <div className=\"boutonBilletHome \">\n            <Link to=\"/Billetterie\">\n              <Button size=\"xl\" gradientDuoTone=\"redToYellow\" >\n                <HiShoppingCart className=\"mr-2 h-10 w-10\" />\n                  Billetterie\n              </Button>             \n            </Link>\n            </div>\n          </div>\n      \n            )\n      }\n\n    return ( \n        <>\n       \n      <div className=\"background \" style={{overflow: \"hidden\"}}>\n        <div className=\"row\">\n          <BannerAlert /> \n          </div>\n          \n        <div className=\"row\">\n          {isAuthenticated() ? (\n            <>\n              <h1 className=\"titleUser pt-3\">Bonjour {customer?.firstname  || \"\"} {customer?.lastname || \"\"}</h1><h2> les concerts suivants devraient vous convenir:</h2>\n            </>\n          ) : (\n          <h1 className=\"title pt-3\">NATION SOUNDS</h1>\n        \n          )}\n          </div>\n        \n          <Link to=\"/Programmation\">\n          <div className=\"ConcertHomePage \" width={100} height={300} >\n            <ConcertHomePage />\n          </div>\n          </Link>\n         \n\n          <Billet />\n\n\n\n          <Link to=\"/Plan\">\n            \n            <div className=\"d-none d-lg-block GmapMini  col-8 offset-2  \">\n              <GoogleMap />\n            </div>\n\n            <div className=\"d-block d-lg-none GmapMiniSmall  col-10 offset-1  \">\n              <GoogleMap />              \n            </div>\n           \n            \n          </Link>  \n\n        </div>\n        <div className=\"marginMap\">\n        <ScrollToTopButton/>\n        </div>\n        </>\n              \n                \n      \n\n      \n      )\n\n}\n\nexport default Home;"],"names":["AdvancedMarkerWithRef","props","children","onMarkerClick","advancedMarkerProps","_objectWithoutProperties","_excluded","markerRef","marker","useAdvancedMarkerRef","_jsx","AdvancedMarker","_objectSpread","onClick","ref","GoogleMap","useEffect","controller","AbortController","async","apiCallPromise","fetch","concat","process","signal","ok","Error","apiCallObj","json","setMarkerData","error","name","setErrorMessage","apiCallMarkers","abort","markerData","useState","selectedId","setSelectedId","selectedType","setSelectedType","selectedDetails","setSelectedDetails","selectedName","setSelectedName","selectedMarker","setSelectedMarker","infoWindowShown","setInfoWindowShown","showLinks","setShowLinks","errorMessage","useCallback","details","id","type","isShown","onMapClick","handleInfowindowCloseClick","sceneChecked","setSceneChecked","React","handleChangeScene","barChecked","setBarChecked","handleChangeBar","parkChecked","setParkChecked","handleChangePark","exitChecked","setExitChecked","handleChangeExit","shopChecked","setShopChecked","handleChangeShop","wcChecked","setWcChecked","handleChangeWc","campChecked","setCampChecked","handleChangeCamp","APIProvider","apiKey","libraries","_Fragment","_jsxs","className","style","overflow","handleShowLinks","src","alt","checked","onChange","width","height","color","textAlign","margin","Map","mapId","maxZoom","minZoom","defaultZoom","defaultCenter","lat","lng","gestureHandling","clickableIcons","disableDefaultUI","map","_ref","latitude","longitude","zIndex","position","parseFloat","anchorPoint","AdvancedMarkerAnchorPoint","InfoWindow","anchor","pixelOffset","onCloseClick","Link","to","Button","variant","scrollToTop","window","scrollTo","top","behavior","ConcertHomePage","concerts","setConcerts","customer","isAuthenticated","useContext","AuthContext","preloadHero","document","getElementById","remove","apiCallConcerts","listDay1Sch1","filter","Val","day","schedule","fullImageUrl","fetchPriority","loading","decoding","aspectRatio","objectFit","display","backgroundColor","location","length","Array","_","i","BannerAlert","alerts","setAlerts","visible","setVisible","console","apiCallAlerts","listAlert","Carousel","slide","message1","message2","Billet","size","gradientDuoTone","HiShoppingCart","firstname","lastname","ScrollToTopButton"],"sourceRoot":""}