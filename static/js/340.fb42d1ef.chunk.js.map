{"version":3,"file":"static/js/340.fb42d1ef.chunk.js","mappings":"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","sources":["Components/ScrollToTopButton.jsx","Components/Programme.jsx","Pages/Programmation.jsx"],"sourcesContent":["\nfunction ScrollToTopButton() {\n \n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div className={`scroll-to-top-button `}>\n      <button onClick={scrollToTop} ><div className=\"HautDePage\"><img src={`${process.env.PUBLIC_URL}/assets/fleches-vers-le-haut.png`} id=\"fleche\" alt=\"flêche\" width={32} height={32}/></div><p className=\"HautDePage\">Haut de page</p></button>\n    </div>\n  );\n\n}\nexport default ScrollToTopButton;","import React from \"react\";\nimport { useState, useEffect} from \"react\";\nimport { Link} from \"react-router-dom\";\nimport { Button } from \"flowbite-react\";\nimport ScrollToTopButton from \"./ScrollToTopButton\";\n\nexport const apiURL = process.env.REACT_APP_API_URL;\n\n\nconst Programme = ()  => {\n\n/////////////////////////////////Définition des variables/////////////////////////////////////\n\n//lodash pour méthode _.uniqBy\nconst _ = require(\"lodash\"); \nconst [concerts, setConcerts] = useState([]);   \nconst [concertsFiltered, setConcertsFiltered] =useState([]); \nconst [concertsFilteredDay, setConcertsFilteredDay] = useState([]); \nconst [dayChecked, setDayChecked] =React.useState(false);\nconst [showLinks, setShowLinks] = useState(false);\nconst [showResults, setShowResults] = useState(true);\nconst [errorMessage, setErrorMessage] = useState(null); //message d'erreur du fetch\n\n\n\n//////////////////////////////Conversions Filtres/////////////////////////////////////////\n//classement des résultat par heure\nconst concertsFilteredOrderedSchedule = concertsFiltered.sort(function compare(a,b){\n  if (a.schedule < b.schedule)\n    return -1;\n  if (a.schedule > b.schedule)\n    return 1;\n  return 0;\n})\n\n//classement des résultats pas jour\nconst concertsFilteredOrderedDay =  concertsFilteredOrderedSchedule.sort(function compare(a,b){\n  if (a.day < b.day)\n    return -1;\n  if (a.day > b.day)\n    return 1;\n  return 0;\n})\n\n\n\nconst handleCheckedDay = (e)=>{\n  if (e.target.checked) {\n    const concertsFilteredDay = concerts.filter((Val) => Val.day === e.target.value)\n      setConcertsFilteredDay(concertsFilteredDay);\n      setConcertsFiltered(concertsFilteredDay);  \n      unCheckFilters();  \n      setDayChecked(true);    \n  } \n} \n\n\n      \n//Création des filtres (retrait des doublons par la méthode .uniq de lodash)\nconst uniqDayConcert = _.uniqBy(concerts, 'day')\n//trie des filtres par ordre alphabétique par la méthose .sort associée à une fonction de comparaison\nconst uniqDayConcerts = uniqDayConcert.sort(function compare(a,b){\n  if (a.day < b.day)\n    return -1;\n  if (a.day > b.day)\n    return 1;\n  return 0;\n})\n// idem pour filtre horaire\nconst uniqScheduleConcert = _.uniqBy(concertsFilteredDay, 'schedule');\nconst uniqScheduleConcerts=uniqScheduleConcert.sort(function compare(a,b){\n  if (a.schedule < b.schedule)\n    return -1;\n  if (a.schedule > b.schedule)\n    return 1;\n  return 0;\n});\n\n// idem pour les autres filtres, pas besoin de trie alphabétique\nconst uniqLocationConcerts = _.uniqBy(concertsFilteredDay , 'location' );  \nconst uniqStyleConcerts = _.uniqBy(concertsFilteredDay, 'style');\n\n\n////////////////////////////////////////Fonctions//////////////////////////////////////\n\nconst handleShowResults = () => {\n    setShowResults(true);\n    setShowLinks(false);\n    window.scrollTo({\n      top: 0,      \n      behavior: \"smooth\",\n    });\n}\n\nconst handleShowLinks = () => {\n  setShowLinks(!showLinks);\n  setShowResults(!showResults);\n}\n\n// Fonctions de désactivation des tries lors du changement de concert\nconst unCheckFilters = () => {\n  let radioButtonsOther = document.getElementsByName(\"radio\");  \n  radioButtonsOther.forEach(value=>value.checked = false);  \n};\n//Désactivation de tout les radios\nconst reset = () => {\n  let allRadioButtons = document.querySelectorAll(\".checkBox\");\n  allRadioButtons.forEach(value=>value.checked = false);  \n  setConcertsFiltered(concerts); \n  setDayChecked(false);\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\",\n  });\n}\n\nconst handleCheckedOther = (e)=>{\n  if (e.target.checked) {\n  const concertsFilteredOther = concertsFilteredDay.filter((Val) =>  Val.schedule === e.target.value || Val.location === e.target.value || Val.style === e.target.value)\n  setConcertsFiltered(concertsFilteredOther);    \n  } \n} \n\n  // Récupération des données de l'API\n  useEffect( ()=>{\n    // Création d'un AbortController pour pouvoir annuler la requête si nécessaire\n    const controller = new AbortController(); //API JavaScript native qui sert à annuler une requête réseau\n    const apiCallConcerts = async () => {\n      try {\n           // On attache le signal du controller à la requête fetch pour pouvoir l'annuler plus tard\n        const apiCallPromise = await fetch(`${apiURL}/api/concerts`, \n          {            \n            signal: controller.signal,    \n          }\n        );\n        //on doit forcer une erreur si le serveur répond avec un code http 4xx ou 5xx.        \n        if (!apiCallPromise.ok) \n          throw new Error(\"Pas de réponse réseau\");\n\n        const apiCallObj = await apiCallPromise.json();\n        setConcerts(apiCallObj)    \n        setConcertsFiltered(apiCallObj) \n          \n        // si une erreur se produit\n        } catch (error) {\n          if (error.name === 'AbortError') {\n            // Requête annulée , on quitte simplement\n            return;\n            }\n            // Message d'erreur pour l'utilisateur si la requête échoue\n            setErrorMessage(\"Impossible de charger la liste des concerts. Veuillez réessayer plus tard.\");\n          }          \n        };\n         // Appel de la fonction async pour récupérer les concerts\n      apiCallConcerts();\n      // Nettoyage : on annule la requête si le composant se démonte ( optimisation du réseau.)\n      return () => { controller.abort();    \n    };    \n  }, []); \n\n    \n\n     \n// Vignette d'affichage et lien vers détails avec props          \nconst Details= ({id ,name, style, location, schedule, day, fullImageUrl, details, details2}) => {    \n    return (\n      < Link to='/Programmation/ProgrammeDetails' state={{id, name, style, location, schedule, day, fullImageUrl, details, details2}}>            \n          <div class=\"row card cardh mb-3 mt-3\" >\n            <div class=\"row g-0\">\n              <div class=\"col-md-4 \">\n                <img src={fullImageUrl}  class=\"img-fluid rounded\" alt={name} />\n              </div>\n              <div class=\"col-md-8 \">\n                <div class=\"card-body \">\n                  <h1 class=\"card-title\">{name}</h1>\n                  <p class=\"card-text\">{style}</p>\n                  <p class=\"card-text\">{day}</p>\n                  <p class=\"card-text\">{schedule}</p>\n                  <p class=\"card-text\"><small class=\"text-body-secondary \">{location}</small></p>\n                </div>\n              </div>\n            </div>\n          </div>\n      \n      </Link>\n    ); \n  }\n   \nconst ListConcert = ({concerts}) => {    \n  return (\n  /*transformation de l'objet item en tableau Val */ \n    <div class={`  ${showResults ? \"d-block\" : \"d-none\"} `}>     \n      <div className=\"row  g-0 kardProg\">\n        <div  className=\"cardProg pb-0\" >\n          {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}  \n          {concerts.map((Val) => {                    \n            return (                   \n          /* définition des variables name, day, shedule, fullImageUrl, details pour la variable Details*/                         \n              <Details name={Val.name}\n                style={Val.style}\n                location={Val.location}\n                day={Val.day}\n                schedule={Val.schedule}\n                fullImageUrl={Val.fullImageUrl}\n                details={Val.details} \n                details2={Val.details2} />             \n            );\n          })}\n        </div>\n      </div>  \n    </div>  \n  );\n}    \n\n  return (\n    <>\n      <div className=\"fullpageProg\">                \n        <div>                       \n          <div class=\"btn-group BurgerSituation  \" data-toggle=\"buttons-checkbox\">                                  \n            <button type=\"button\" class=\"BurgerProg btn btn-default \" onClick={handleShowLinks}>   \n              <h2 className=\"h2BurgerProg\">Filtres</h2>                     \n              <img src={`${process.env.PUBLIC_URL}/assets/parametres-curseurs.png`} alt='curseur' ></img>                        \n            </button>                    \n          </div>                    \n        </div>            \n        \n        <div class={`  ${showLinks ? \"d-block\" : \"d-none\"} `}>  \n          <div className=\"menuFilter\">\n            <h2  className=\"titleFilter \">Choisir le jour:</h2>\n            {uniqDayConcerts.map((Val) => {\n              return (\n                <>\n                  <div>                                            \n                    <p className=\"listCheck\">\n                      <input className=\"checkBox\" class=\"checkBox\" type=\"radio\"  value={Val.day} name=\"radioDay\"   onClick={handleCheckedDay} />\n                      <label>{Val.day}</label> \n                    </p>  \n                                      \n                  </div>\n                </>\n              );\n            })} \n          </div>\n          \n          <div class={`${dayChecked ? \"d-block\" : \"d-none\"} `}>   \n            <div className=\"menuFilter\">\n              <h2 className=\"titleFilter\">Filtrer par horaire:</h2> \n                {uniqScheduleConcerts.map((Val) => {        \n                  return (\n                    <>           \n                      <div>                                   \n                        <p className=\"listCheck\">\n                          <input className=\"checkBox\"  type=\"radio\" value={Val.schedule} name=\"radio\"  onChange={handleCheckedOther}    />\n                          <label>{Val.schedule}</label> \n                        </p>                        \n                      </div>\n                    </>\n                  );\n                })} \n\n              <h2 className=\"titleFilter\">Filtrer par style:</h2>    \n                {uniqStyleConcerts.map((Val) => {                             \n                  return (\n                    <>                            \n                      <div>              \n                        <p className=\"listCheck\">                  \n                          <input className=\"checkBox\" type=\"radio\"  value={Val.style} name=\"radio\" onChange={handleCheckedOther} />\n                          <label>{Val.style}</label>              \n                        </p>                 \n                      </div>                \n                    </>\n                  );      \n                })} \n\n              <h2  className=\"titleFilter\">Filtrer par scène:</h2>  \n              {uniqLocationConcerts.map((Val) => {        \n                return (\n                  <>\n                    <div>                       \n                      <p className=\"listCheck\">\n                        <input className=\"checkBox\" type=\"radio\"  value={Val.location} name=\"radio\" onChange={handleCheckedOther} />\n                        <label>{Val.location}</label> \n                      </p>                      \n                    </div>\n                  </>\n                );        \n              })}  \n            </div>\n          </div>\n          <div className=\"boutonLegend\">\n            <Button  color=\"failure\" className=\"boutonFilterErase\" onClick={reset}>Effacer les filtres</Button>\n            <Button  color=\"blue\" className=\"boutonFilterResult\" onClick={handleShowResults}>Voir les résultats</Button>\n          </div>\n        </div>  \n        <div  class={`  ${showResults ? \"d-block\" : \"d-none\"} `}>\n          <div className=\"kard pb-0 mt-8 \" data-testId=\"concertHome\">               \n            <ListConcert concerts={concertsFilteredOrderedDay} />          \n          </div>\n          <div className=\"retour\">\n            <ScrollToTopButton />\n          </div> \n        </div>    \n      </div>\n    </>\n  )\n}\n\nexport default Programme ;\n      \n\n \n\n\n\n\n  \n\n","import React from 'react';\nimport Programme from \"../Components/Programme\";\n\n\n\n\nfunction Programmation() {\n  \n  return (\n    <>\n      <div className=\"contacth1\">\n        <h1> Programmation </h1>\n      </div>\n      <div className='fullPage'>\n        <Programme />\n      </div>\n    </>\n  );\n}\nexport default Programmation;"],"names":["_jsx","className","children","_jsxs","onClick","scrollToTop","window","scrollTo","top","behavior","src","concat","process","id","alt","width","height","Programme","_","require","concerts","setConcerts","useState","concertsFiltered","setConcertsFiltered","concertsFilteredDay","setConcertsFilteredDay","dayChecked","setDayChecked","React","showLinks","setShowLinks","showResults","setShowResults","errorMessage","setErrorMessage","concertsFilteredOrderedDay","sort","a","b","schedule","day","handleCheckedDay","e","target","checked","filter","Val","value","unCheckFilters","uniqDayConcerts","uniqBy","uniqScheduleConcerts","uniqLocationConcerts","uniqStyleConcerts","document","getElementsByName","forEach","handleCheckedOther","concertsFilteredOther","location","style","useEffect","controller","AbortController","async","apiCallPromise","fetch","signal","ok","Error","apiCallObj","json","error","name","apiCallConcerts","abort","Details","_ref","fullImageUrl","details","details2","Link","to","state","class","ListConcert","_ref2","color","map","_Fragment","type","handleShowLinks","onChange","Button","reset","querySelectorAll","handleShowResults","ScrollToTopButton"],"sourceRoot":""}